#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDAparserCS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CaseManagerDB")]
	public partial class CasemanagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertYesNotype(YesNotype instance);
    partial void UpdateYesNotype(YesNotype instance);
    partial void DeleteYesNotype(YesNotype instance);
    partial void InsertActivityCost(ActivityCost instance);
    partial void UpdateActivityCost(ActivityCost instance);
    partial void DeleteActivityCost(ActivityCost instance);
    partial void InsertAnnotation(Annotation instance);
    partial void UpdateAnnotation(Annotation instance);
    partial void DeleteAnnotation(Annotation instance);
    partial void InsertBloodType(BloodType instance);
    partial void UpdateBloodType(BloodType instance);
    partial void DeleteBloodType(BloodType instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCondition(Condition instance);
    partial void UpdateCondition(Condition instance);
    partial void DeleteCondition(Condition instance);
    partial void InsertConditionActivity(ConditionActivity instance);
    partial void UpdateConditionActivity(ConditionActivity instance);
    partial void DeleteConditionActivity(ConditionActivity instance);
    partial void InsertConditionService(ConditionService instance);
    partial void UpdateConditionService(ConditionService instance);
    partial void DeleteConditionService(ConditionService instance);
    partial void InsertConditionsOfAcceptWelfare(ConditionsOfAcceptWelfare instance);
    partial void UpdateConditionsOfAcceptWelfare(ConditionsOfAcceptWelfare instance);
    partial void DeleteConditionsOfAcceptWelfare(ConditionsOfAcceptWelfare instance);
    partial void InsertDisableLevel(DisableLevel instance);
    partial void UpdateDisableLevel(DisableLevel instance);
    partial void DeleteDisableLevel(DisableLevel instance);
    partial void InsertDisableType(DisableType instance);
    partial void UpdateDisableType(DisableType instance);
    partial void DeleteDisableType(DisableType instance);
    partial void InsertDuration(Duration instance);
    partial void UpdateDuration(Duration instance);
    partial void DeleteDuration(Duration instance);
    partial void InsertEducationChild(EducationChild instance);
    partial void UpdateEducationChild(EducationChild instance);
    partial void DeleteEducationChild(EducationChild instance);
    partial void InsertEducationLevel(EducationLevel instance);
    partial void UpdateEducationLevel(EducationLevel instance);
    partial void DeleteEducationLevel(EducationLevel instance);
    partial void InsertEducationStatus(EducationStatus instance);
    partial void UpdateEducationStatus(EducationStatus instance);
    partial void DeleteEducationStatus(EducationStatus instance);
    partial void InsertExistingWelfare(ExistingWelfare instance);
    partial void UpdateExistingWelfare(ExistingWelfare instance);
    partial void DeleteExistingWelfare(ExistingWelfare instance);
    partial void InsertFamily(Family instance);
    partial void UpdateFamily(Family instance);
    partial void DeleteFamily(Family instance);
    partial void InsertFamilyEconomy(FamilyEconomy instance);
    partial void UpdateFamilyEconomy(FamilyEconomy instance);
    partial void DeleteFamilyEconomy(FamilyEconomy instance);
    partial void InsertFamilyinfoTemp(FamilyinfoTemp instance);
    partial void UpdateFamilyinfoTemp(FamilyinfoTemp instance);
    partial void DeleteFamilyinfoTemp(FamilyinfoTemp instance);
    partial void InsertForeigner(Foreigner instance);
    partial void UpdateForeigner(Foreigner instance);
    partial void DeleteForeigner(Foreigner instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertHavetype(Havetype instance);
    partial void UpdateHavetype(Havetype instance);
    partial void DeleteHavetype(Havetype instance);
    partial void InsertHealthServiceType(HealthServiceType instance);
    partial void UpdateHealthServiceType(HealthServiceType instance);
    partial void DeleteHealthServiceType(HealthServiceType instance);
    partial void InsertHometype(Hometype instance);
    partial void UpdateHometype(Hometype instance);
    partial void DeleteHometype(Hometype instance);
    partial void InsertHospitalCoordinate(HospitalCoordinate instance);
    partial void UpdateHospitalCoordinate(HospitalCoordinate instance);
    partial void DeleteHospitalCoordinate(HospitalCoordinate instance);
    partial void InsertHouse(House instance);
    partial void UpdateHouse(House instance);
    partial void DeleteHouse(House instance);
    partial void InsertHouseDurableType(HouseDurableType instance);
    partial void UpdateHouseDurableType(HouseDurableType instance);
    partial void DeleteHouseDurableType(HouseDurableType instance);
    partial void InsertHouseLocationType(HouseLocationType instance);
    partial void UpdateHouseLocationType(HouseLocationType instance);
    partial void DeleteHouseLocationType(HouseLocationType instance);
    partial void InsertHouseOwnerStatusType(HouseOwnerStatusType instance);
    partial void UpdateHouseOwnerStatusType(HouseOwnerStatusType instance);
    partial void DeleteHouseOwnerStatusType(HouseOwnerStatusType instance);
    partial void InsertInsuranceType(InsuranceType instance);
    partial void UpdateInsuranceType(InsuranceType instance);
    partial void DeleteInsuranceType(InsuranceType instance);
    partial void InsertLiveHomeStatus(LiveHomeStatus instance);
    partial void UpdateLiveHomeStatus(LiveHomeStatus instance);
    partial void DeleteLiveHomeStatus(LiveHomeStatus instance);
    partial void InsertLiveStatus(LiveStatus instance);
    partial void UpdateLiveStatus(LiveStatus instance);
    partial void DeleteLiveStatus(LiveStatus instance);
    partial void InsertLocalAuthoritiesCoordinate(LocalAuthoritiesCoordinate instance);
    partial void UpdateLocalAuthoritiesCoordinate(LocalAuthoritiesCoordinate instance);
    partial void DeleteLocalAuthoritiesCoordinate(LocalAuthoritiesCoordinate instance);
    partial void InsertMariageStatus(MariageStatus instance);
    partial void UpdateMariageStatus(MariageStatus instance);
    partial void DeleteMariageStatus(MariageStatus instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMinistry(Ministry instance);
    partial void UpdateMinistry(Ministry instance);
    partial void DeleteMinistry(Ministry instance);
    partial void InsertOccupation(Occupation instance);
    partial void UpdateOccupation(Occupation instance);
    partial void DeleteOccupation(Occupation instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertPartForEvaluation(PartForEvaluation instance);
    partial void UpdatePartForEvaluation(PartForEvaluation instance);
    partial void DeletePartForEvaluation(PartForEvaluation instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPersoninfoTemp(PersoninfoTemp instance);
    partial void UpdatePersoninfoTemp(PersoninfoTemp instance);
    partial void DeletePersoninfoTemp(PersoninfoTemp instance);
    partial void InsertPlanCaseService(PlanCaseService instance);
    partial void UpdatePlanCaseService(PlanCaseService instance);
    partial void DeletePlanCaseService(PlanCaseService instance);
    partial void InsertPlanService(PlanService instance);
    partial void UpdatePlanService(PlanService instance);
    partial void DeletePlanService(PlanService instance);
    partial void InsertProvider(Provider instance);
    partial void UpdateProvider(Provider instance);
    partial void DeleteProvider(Provider instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertQuastionare(Quastionare instance);
    partial void UpdateQuastionare(Quastionare instance);
    partial void DeleteQuastionare(Quastionare instance);
    partial void InsertReasonMoveType(ReasonMoveType instance);
    partial void UpdateReasonMoveType(ReasonMoveType instance);
    partial void DeleteReasonMoveType(ReasonMoveType instance);
    partial void InsertRelation(Relation instance);
    partial void UpdateRelation(Relation instance);
    partial void DeleteRelation(Relation instance);
    partial void InsertResultForEvaluation(ResultForEvaluation instance);
    partial void UpdateResultForEvaluation(ResultForEvaluation instance);
    partial void DeleteResultForEvaluation(ResultForEvaluation instance);
    partial void InsertResultQuastionare(ResultQuastionare instance);
    partial void UpdateResultQuastionare(ResultQuastionare instance);
    partial void DeleteResultQuastionare(ResultQuastionare instance);
    partial void InsertSchoolCoordinate(SchoolCoordinate instance);
    partial void UpdateSchoolCoordinate(SchoolCoordinate instance);
    partial void DeleteSchoolCoordinate(SchoolCoordinate instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertSocialDevelopCoordinate(SocialDevelopCoordinate instance);
    partial void UpdateSocialDevelopCoordinate(SocialDevelopCoordinate instance);
    partial void DeleteSocialDevelopCoordinate(SocialDevelopCoordinate instance);
    partial void InsertSubActivity(SubActivity instance);
    partial void UpdateSubActivity(SubActivity instance);
    partial void DeleteSubActivity(SubActivity instance);
    partial void InsertSubWelfare(SubWelfare instance);
    partial void UpdateSubWelfare(SubWelfare instance);
    partial void DeleteSubWelfare(SubWelfare instance);
    partial void InsertTitle(Title instance);
    partial void UpdateTitle(Title instance);
    partial void DeleteTitle(Title instance);
    partial void InsertTransportation(Transportation instance);
    partial void UpdateTransportation(Transportation instance);
    partial void DeleteTransportation(Transportation instance);
    partial void InsertTravelGotoHostpital(TravelGotoHostpital instance);
    partial void UpdateTravelGotoHostpital(TravelGotoHostpital instance);
    partial void DeleteTravelGotoHostpital(TravelGotoHostpital instance);
    partial void InsertTravelGotoSchool(TravelGotoSchool instance);
    partial void UpdateTravelGotoSchool(TravelGotoSchool instance);
    partial void DeleteTravelGotoSchool(TravelGotoSchool instance);
    partial void InsertTumbon(Tumbon instance);
    partial void UpdateTumbon(Tumbon instance);
    partial void DeleteTumbon(Tumbon instance);
    partial void InsertWelfareCategory(WelfareCategory instance);
    partial void UpdateWelfareCategory(WelfareCategory instance);
    partial void DeleteWelfareCategory(WelfareCategory instance);
    #endregion
		
		public CasemanagerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CaseManagerDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CasemanagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CasemanagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CasemanagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CasemanagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<YesNotype> YesNotypes
		{
			get
			{
				return this.GetTable<YesNotype>();
			}
		}
		
		public System.Data.Linq.Table<ActivityCost> ActivityCosts
		{
			get
			{
				return this.GetTable<ActivityCost>();
			}
		}
		
		public System.Data.Linq.Table<Annotation> Annotations
		{
			get
			{
				return this.GetTable<Annotation>();
			}
		}
		
		public System.Data.Linq.Table<BloodType> BloodTypes
		{
			get
			{
				return this.GetTable<BloodType>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Condition> Conditions
		{
			get
			{
				return this.GetTable<Condition>();
			}
		}
		
		public System.Data.Linq.Table<ConditionActivity> ConditionActivities
		{
			get
			{
				return this.GetTable<ConditionActivity>();
			}
		}
		
		public System.Data.Linq.Table<ConditionService> ConditionServices
		{
			get
			{
				return this.GetTable<ConditionService>();
			}
		}
		
		public System.Data.Linq.Table<ConditionsOfAcceptWelfare> ConditionsOfAcceptWelfares
		{
			get
			{
				return this.GetTable<ConditionsOfAcceptWelfare>();
			}
		}
		
		public System.Data.Linq.Table<DisableLevel> DisableLevels
		{
			get
			{
				return this.GetTable<DisableLevel>();
			}
		}
		
		public System.Data.Linq.Table<DisableType> DisableTypes
		{
			get
			{
				return this.GetTable<DisableType>();
			}
		}
		
		public System.Data.Linq.Table<Duration> Durations
		{
			get
			{
				return this.GetTable<Duration>();
			}
		}
		
		public System.Data.Linq.Table<EducationChild> EducationChilds
		{
			get
			{
				return this.GetTable<EducationChild>();
			}
		}
		
		public System.Data.Linq.Table<EducationLevel> EducationLevels
		{
			get
			{
				return this.GetTable<EducationLevel>();
			}
		}
		
		public System.Data.Linq.Table<EducationStatus> EducationStatus
		{
			get
			{
				return this.GetTable<EducationStatus>();
			}
		}
		
		public System.Data.Linq.Table<ExistingWelfare> ExistingWelfares
		{
			get
			{
				return this.GetTable<ExistingWelfare>();
			}
		}
		
		public System.Data.Linq.Table<Family> Families
		{
			get
			{
				return this.GetTable<Family>();
			}
		}
		
		public System.Data.Linq.Table<FamilyEconomy> FamilyEconomies
		{
			get
			{
				return this.GetTable<FamilyEconomy>();
			}
		}
		
		public System.Data.Linq.Table<FamilyinfoTemp> FamilyinfoTemps
		{
			get
			{
				return this.GetTable<FamilyinfoTemp>();
			}
		}
		
		public System.Data.Linq.Table<Foreigner> Foreigners
		{
			get
			{
				return this.GetTable<Foreigner>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<Havetype> Havetypes
		{
			get
			{
				return this.GetTable<Havetype>();
			}
		}
		
		public System.Data.Linq.Table<HealthServiceType> HealthServiceTypes
		{
			get
			{
				return this.GetTable<HealthServiceType>();
			}
		}
		
		public System.Data.Linq.Table<Hometype> Hometypes
		{
			get
			{
				return this.GetTable<Hometype>();
			}
		}
		
		public System.Data.Linq.Table<HospitalCoordinate> HospitalCoordinates
		{
			get
			{
				return this.GetTable<HospitalCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<House> Houses
		{
			get
			{
				return this.GetTable<House>();
			}
		}
		
		public System.Data.Linq.Table<HouseDurableType> HouseDurableTypes
		{
			get
			{
				return this.GetTable<HouseDurableType>();
			}
		}
		
		public System.Data.Linq.Table<HouseLocationType> HouseLocationTypes
		{
			get
			{
				return this.GetTable<HouseLocationType>();
			}
		}
		
		public System.Data.Linq.Table<HouseOwnerStatusType> HouseOwnerStatusTypes
		{
			get
			{
				return this.GetTable<HouseOwnerStatusType>();
			}
		}
		
		public System.Data.Linq.Table<InsuranceType> InsuranceTypes
		{
			get
			{
				return this.GetTable<InsuranceType>();
			}
		}
		
		public System.Data.Linq.Table<LiveHomeStatus> LiveHomeStatus
		{
			get
			{
				return this.GetTable<LiveHomeStatus>();
			}
		}
		
		public System.Data.Linq.Table<LiveStatus> LiveStatus
		{
			get
			{
				return this.GetTable<LiveStatus>();
			}
		}
		
		public System.Data.Linq.Table<LocalAuthoritiesCoordinate> LocalAuthoritiesCoordinates
		{
			get
			{
				return this.GetTable<LocalAuthoritiesCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<MariageStatus> MariageStatus
		{
			get
			{
				return this.GetTable<MariageStatus>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Ministry> Ministries
		{
			get
			{
				return this.GetTable<Ministry>();
			}
		}
		
		public System.Data.Linq.Table<Occupation> Occupations
		{
			get
			{
				return this.GetTable<Occupation>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<PartForEvaluation> PartForEvaluations
		{
			get
			{
				return this.GetTable<PartForEvaluation>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<PersoninfoTemp> PersoninfoTemps
		{
			get
			{
				return this.GetTable<PersoninfoTemp>();
			}
		}
		
		public System.Data.Linq.Table<PlanCaseService> PlanCaseServices
		{
			get
			{
				return this.GetTable<PlanCaseService>();
			}
		}
		
		public System.Data.Linq.Table<PlanService> PlanServices
		{
			get
			{
				return this.GetTable<PlanService>();
			}
		}
		
		public System.Data.Linq.Table<Provider> Providers
		{
			get
			{
				return this.GetTable<Provider>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<Quastionare> Quastionares
		{
			get
			{
				return this.GetTable<Quastionare>();
			}
		}
		
		public System.Data.Linq.Table<ReasonMoveType> ReasonMoveTypes
		{
			get
			{
				return this.GetTable<ReasonMoveType>();
			}
		}
		
		public System.Data.Linq.Table<Relation> Relations
		{
			get
			{
				return this.GetTable<Relation>();
			}
		}
		
		public System.Data.Linq.Table<ResultForEvaluation> ResultForEvaluations
		{
			get
			{
				return this.GetTable<ResultForEvaluation>();
			}
		}
		
		public System.Data.Linq.Table<ResultQuastionare> ResultQuastionares
		{
			get
			{
				return this.GetTable<ResultQuastionare>();
			}
		}
		
		public System.Data.Linq.Table<SchoolCoordinate> SchoolCoordinates
		{
			get
			{
				return this.GetTable<SchoolCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<SocialDevelopCoordinate> SocialDevelopCoordinates
		{
			get
			{
				return this.GetTable<SocialDevelopCoordinate>();
			}
		}
		
		public System.Data.Linq.Table<SubActivity> SubActivities
		{
			get
			{
				return this.GetTable<SubActivity>();
			}
		}
		
		public System.Data.Linq.Table<SubWelfare> SubWelfares
		{
			get
			{
				return this.GetTable<SubWelfare>();
			}
		}
		
		public System.Data.Linq.Table<Title> Titles
		{
			get
			{
				return this.GetTable<Title>();
			}
		}
		
		public System.Data.Linq.Table<Transportation> Transportations
		{
			get
			{
				return this.GetTable<Transportation>();
			}
		}
		
		public System.Data.Linq.Table<TravelGotoHostpital> TravelGotoHostpitals
		{
			get
			{
				return this.GetTable<TravelGotoHostpital>();
			}
		}
		
		public System.Data.Linq.Table<TravelGotoSchool> TravelGotoSchools
		{
			get
			{
				return this.GetTable<TravelGotoSchool>();
			}
		}
		
		public System.Data.Linq.Table<Tumbon> Tumbons
		{
			get
			{
				return this.GetTable<Tumbon>();
			}
		}
		
		public System.Data.Linq.Table<WelfareCategory> WelfareCategories
		{
			get
			{
				return this.GetTable<WelfareCategory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ACTCode;
		
		private string _ACTDesc;
		
		private string _SVCCode;
		
		private EntitySet<ConditionActivity> _ConditionActivities;
		
		private EntitySet<SubActivity> _SubActivities;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACTCodeChanging(string value);
    partial void OnACTCodeChanged();
    partial void OnACTDescChanging(string value);
    partial void OnACTDescChanged();
    partial void OnSVCCodeChanging(string value);
    partial void OnSVCCodeChanged();
    #endregion
		
		public Activity()
		{
			this._ConditionActivities = new EntitySet<ConditionActivity>(new Action<ConditionActivity>(this.attach_ConditionActivities), new Action<ConditionActivity>(this.detach_ConditionActivities));
			this._SubActivities = new EntitySet<SubActivity>(new Action<SubActivity>(this.attach_SubActivities), new Action<SubActivity>(this.detach_SubActivities));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ACTCode
		{
			get
			{
				return this._ACTCode;
			}
			set
			{
				if ((this._ACTCode != value))
				{
					this.OnACTCodeChanging(value);
					this.SendPropertyChanging();
					this._ACTCode = value;
					this.SendPropertyChanged("ACTCode");
					this.OnACTCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTDesc", DbType="Char(255)")]
		public string ACTDesc
		{
			get
			{
				return this._ACTDesc;
			}
			set
			{
				if ((this._ACTDesc != value))
				{
					this.OnACTDescChanging(value);
					this.SendPropertyChanging();
					this._ACTDesc = value;
					this.SendPropertyChanged("ACTDesc");
					this.OnACTDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCCode", DbType="Char(255)")]
		public string SVCCode
		{
			get
			{
				return this._SVCCode;
			}
			set
			{
				if ((this._SVCCode != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSVCCodeChanging(value);
					this.SendPropertyChanging();
					this._SVCCode = value;
					this.SendPropertyChanged("SVCCode");
					this.OnSVCCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ConditionActivity", Storage="_ConditionActivities", ThisKey="ACTCode", OtherKey="ACTCode")]
		public EntitySet<ConditionActivity> ConditionActivities
		{
			get
			{
				return this._ConditionActivities;
			}
			set
			{
				this._ConditionActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_SubActivity", Storage="_SubActivities", ThisKey="ACTCode", OtherKey="ACTCode")]
		public EntitySet<SubActivity> SubActivities
		{
			get
			{
				return this._SubActivities;
			}
			set
			{
				this._SubActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Activity", Storage="_Service", ThisKey="SVCCode", OtherKey="SVCCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._SVCCode = value.SVCCode;
					}
					else
					{
						this._SVCCode = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConditionActivities(ConditionActivity entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ConditionActivities(ConditionActivity entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_SubActivities(SubActivity entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_SubActivities(SubActivity entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YesNotype")]
	public partial class YesNotype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _YesNoID;
		
		private string _YesNoDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYesNoIDChanging(string value);
    partial void OnYesNoIDChanged();
    partial void OnYesNoDescriptionChanging(string value);
    partial void OnYesNoDescriptionChanged();
    #endregion
		
		public YesNotype()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesNoID", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string YesNoID
		{
			get
			{
				return this._YesNoID;
			}
			set
			{
				if ((this._YesNoID != value))
				{
					this.OnYesNoIDChanging(value);
					this.SendPropertyChanging();
					this._YesNoID = value;
					this.SendPropertyChanged("YesNoID");
					this.OnYesNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesNoDescription", DbType="VarChar(20)")]
		public string YesNoDescription
		{
			get
			{
				return this._YesNoDescription;
			}
			set
			{
				if ((this._YesNoDescription != value))
				{
					this.OnYesNoDescriptionChanging(value);
					this.SendPropertyChanging();
					this._YesNoDescription = value;
					this.SendPropertyChanged("YesNoDescription");
					this.OnYesNoDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityCost")]
	public partial class ActivityCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ACTCode;
		
		private string _Unit;
		
		private string _LabourCost;
		
		private string _MaterialCost;
		
		private string _CC_Equipment;
		
		private string _CC_Building;
		
		private string _IndirectCost;
		
		private string _ProposedCost;
		
		private string _CurrentCost;
		
		private string _UnitCost;
		
		private string _ReferencedCostOrg;
		
		private System.Nullable<System.DateTime> _TimsStamp;
		
		private string _AID;
		
		private EntityRef<Annotation> _Annotation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACTCodeChanging(string value);
    partial void OnACTCodeChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnLabourCostChanging(string value);
    partial void OnLabourCostChanged();
    partial void OnMaterialCostChanging(string value);
    partial void OnMaterialCostChanged();
    partial void OnCC_EquipmentChanging(string value);
    partial void OnCC_EquipmentChanged();
    partial void OnCC_BuildingChanging(string value);
    partial void OnCC_BuildingChanged();
    partial void OnIndirectCostChanging(string value);
    partial void OnIndirectCostChanged();
    partial void OnProposedCostChanging(string value);
    partial void OnProposedCostChanged();
    partial void OnCurrentCostChanging(string value);
    partial void OnCurrentCostChanged();
    partial void OnUnitCostChanging(string value);
    partial void OnUnitCostChanged();
    partial void OnReferencedCostOrgChanging(string value);
    partial void OnReferencedCostOrgChanged();
    partial void OnTimsStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimsStampChanged();
    partial void OnAIDChanging(string value);
    partial void OnAIDChanged();
    #endregion
		
		public ActivityCost()
		{
			this._Annotation = default(EntityRef<Annotation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ACTCode
		{
			get
			{
				return this._ACTCode;
			}
			set
			{
				if ((this._ACTCode != value))
				{
					this.OnACTCodeChanging(value);
					this.SendPropertyChanging();
					this._ACTCode = value;
					this.SendPropertyChanged("ACTCode");
					this.OnACTCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Char(255)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabourCost", DbType="Char(255)")]
		public string LabourCost
		{
			get
			{
				return this._LabourCost;
			}
			set
			{
				if ((this._LabourCost != value))
				{
					this.OnLabourCostChanging(value);
					this.SendPropertyChanging();
					this._LabourCost = value;
					this.SendPropertyChanged("LabourCost");
					this.OnLabourCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCost", DbType="Char(255)")]
		public string MaterialCost
		{
			get
			{
				return this._MaterialCost;
			}
			set
			{
				if ((this._MaterialCost != value))
				{
					this.OnMaterialCostChanging(value);
					this.SendPropertyChanging();
					this._MaterialCost = value;
					this.SendPropertyChanged("MaterialCost");
					this.OnMaterialCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC_Equipment", DbType="Char(255)")]
		public string CC_Equipment
		{
			get
			{
				return this._CC_Equipment;
			}
			set
			{
				if ((this._CC_Equipment != value))
				{
					this.OnCC_EquipmentChanging(value);
					this.SendPropertyChanging();
					this._CC_Equipment = value;
					this.SendPropertyChanged("CC_Equipment");
					this.OnCC_EquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CC_Building", DbType="Char(255)")]
		public string CC_Building
		{
			get
			{
				return this._CC_Building;
			}
			set
			{
				if ((this._CC_Building != value))
				{
					this.OnCC_BuildingChanging(value);
					this.SendPropertyChanging();
					this._CC_Building = value;
					this.SendPropertyChanged("CC_Building");
					this.OnCC_BuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirectCost", DbType="Char(255)")]
		public string IndirectCost
		{
			get
			{
				return this._IndirectCost;
			}
			set
			{
				if ((this._IndirectCost != value))
				{
					this.OnIndirectCostChanging(value);
					this.SendPropertyChanging();
					this._IndirectCost = value;
					this.SendPropertyChanged("IndirectCost");
					this.OnIndirectCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedCost", DbType="Char(255)")]
		public string ProposedCost
		{
			get
			{
				return this._ProposedCost;
			}
			set
			{
				if ((this._ProposedCost != value))
				{
					this.OnProposedCostChanging(value);
					this.SendPropertyChanging();
					this._ProposedCost = value;
					this.SendPropertyChanged("ProposedCost");
					this.OnProposedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCost", DbType="Char(255)")]
		public string CurrentCost
		{
			get
			{
				return this._CurrentCost;
			}
			set
			{
				if ((this._CurrentCost != value))
				{
					this.OnCurrentCostChanging(value);
					this.SendPropertyChanging();
					this._CurrentCost = value;
					this.SendPropertyChanged("CurrentCost");
					this.OnCurrentCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Char(255)")]
		public string UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferencedCostOrg", DbType="Char(255)")]
		public string ReferencedCostOrg
		{
			get
			{
				return this._ReferencedCostOrg;
			}
			set
			{
				if ((this._ReferencedCostOrg != value))
				{
					this.OnReferencedCostOrgChanging(value);
					this.SendPropertyChanging();
					this._ReferencedCostOrg = value;
					this.SendPropertyChanged("ReferencedCostOrg");
					this.OnReferencedCostOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimsStamp", DbType="Date")]
		public System.Nullable<System.DateTime> TimsStamp
		{
			get
			{
				return this._TimsStamp;
			}
			set
			{
				if ((this._TimsStamp != value))
				{
					this.OnTimsStampChanging(value);
					this.SendPropertyChanging();
					this._TimsStamp = value;
					this.SendPropertyChanged("TimsStamp");
					this.OnTimsStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", DbType="Char(255)")]
		public string AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					if (this._Annotation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Annotation_ActivityCost", Storage="_Annotation", ThisKey="AID", OtherKey="AID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Annotation Annotation
		{
			get
			{
				return this._Annotation.Entity;
			}
			set
			{
				Annotation previousValue = this._Annotation.Entity;
				if (((previousValue != value) 
							|| (this._Annotation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Annotation.Entity = null;
						previousValue.ActivityCosts.Remove(this);
					}
					this._Annotation.Entity = value;
					if ((value != null))
					{
						value.ActivityCosts.Add(this);
						this._AID = value.AID;
					}
					else
					{
						this._AID = default(string);
					}
					this.SendPropertyChanged("Annotation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Annotation")]
	public partial class Annotation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AID;
		
		private string _AText;
		
		private string _AnnotationID;
		
		private string _Reference;
		
		private EntitySet<ActivityCost> _ActivityCosts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(string value);
    partial void OnAIDChanged();
    partial void OnATextChanging(string value);
    partial void OnATextChanged();
    partial void OnAnnotationIDChanging(string value);
    partial void OnAnnotationIDChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public Annotation()
		{
			this._ActivityCosts = new EntitySet<ActivityCost>(new Action<ActivityCost>(this.attach_ActivityCosts), new Action<ActivityCost>(this.detach_ActivityCosts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AText", DbType="Char(255)")]
		public string AText
		{
			get
			{
				return this._AText;
			}
			set
			{
				if ((this._AText != value))
				{
					this.OnATextChanging(value);
					this.SendPropertyChanging();
					this._AText = value;
					this.SendPropertyChanged("AText");
					this.OnATextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnotationID", DbType="Char(255)")]
		public string AnnotationID
		{
			get
			{
				return this._AnnotationID;
			}
			set
			{
				if ((this._AnnotationID != value))
				{
					this.OnAnnotationIDChanging(value);
					this.SendPropertyChanging();
					this._AnnotationID = value;
					this.SendPropertyChanged("AnnotationID");
					this.OnAnnotationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="Char(255)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Annotation_ActivityCost", Storage="_ActivityCosts", ThisKey="AID", OtherKey="AID")]
		public EntitySet<ActivityCost> ActivityCosts
		{
			get
			{
				return this._ActivityCosts;
			}
			set
			{
				this._ActivityCosts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityCosts(ActivityCost entity)
		{
			this.SendPropertyChanging();
			entity.Annotation = this;
		}
		
		private void detach_ActivityCosts(ActivityCost entity)
		{
			this.SendPropertyChanging();
			entity.Annotation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BloodType")]
	public partial class BloodType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BloodID;
		
		private string _BloodType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBloodIDChanging(string value);
    partial void OnBloodIDChanged();
    partial void OnBloodType1Changing(string value);
    partial void OnBloodType1Changed();
    #endregion
		
		public BloodType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BloodID
		{
			get
			{
				return this._BloodID;
			}
			set
			{
				if ((this._BloodID != value))
				{
					this.OnBloodIDChanging(value);
					this.SendPropertyChanging();
					this._BloodID = value;
					this.SendPropertyChanged("BloodID");
					this.OnBloodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BloodType", Storage="_BloodType1", DbType="VarChar(2)")]
		public string BloodType1
		{
			get
			{
				return this._BloodType1;
			}
			set
			{
				if ((this._BloodType1 != value))
				{
					this.OnBloodType1Changing(value);
					this.SendPropertyChanging();
					this._BloodType1 = value;
					this.SendPropertyChanged("BloodType1");
					this.OnBloodType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CityID;
		
		private string _CityDescription;
		
		private string _ProvinceID;
		
		private EntitySet<Tumbon> _Tumbons;
		
		private EntityRef<Province> _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(string value);
    partial void OnCityIDChanged();
    partial void OnCityDescriptionChanging(string value);
    partial void OnCityDescriptionChanged();
    partial void OnProvinceIDChanging(string value);
    partial void OnProvinceIDChanged();
    #endregion
		
		public City()
		{
			this._Tumbons = new EntitySet<Tumbon>(new Action<Tumbon>(this.attach_Tumbons), new Action<Tumbon>(this.detach_Tumbons));
			this._Province = default(EntityRef<Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityDescription", DbType="VarChar(MAX)")]
		public string CityDescription
		{
			get
			{
				return this._CityDescription;
			}
			set
			{
				if ((this._CityDescription != value))
				{
					this.OnCityDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CityDescription = value;
					this.SendPropertyChanged("CityDescription");
					this.OnCityDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="VarChar(10)")]
		public string ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Tumbon", Storage="_Tumbons", ThisKey="CityID", OtherKey="CityID")]
		public EntitySet<Tumbon> Tumbons
		{
			get
			{
				return this._Tumbons;
			}
			set
			{
				this._Tumbons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Province", ThisKey="ProvinceID", OtherKey="ProvinceID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._ProvinceID = value.ProvinceID;
					}
					else
					{
						this._ProvinceID = default(string);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tumbons(Tumbon entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Tumbons(Tumbon entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Condition")]
	public partial class Condition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConditionCode;
		
		private string _ConditionDesc;
		
		private string _Condition1;
		
		private EntityRef<ConditionActivity> _ConditionActivity;
		
		private EntityRef<ConditionService> _ConditionService;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionCodeChanging(string value);
    partial void OnConditionCodeChanged();
    partial void OnConditionDescChanging(string value);
    partial void OnConditionDescChanged();
    partial void OnCondition1Changing(string value);
    partial void OnCondition1Changed();
    #endregion
		
		public Condition()
		{
			this._ConditionActivity = default(EntityRef<ConditionActivity>);
			this._ConditionService = default(EntityRef<ConditionService>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					this.OnConditionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConditionCode = value;
					this.SendPropertyChanged("ConditionCode");
					this.OnConditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDesc", DbType="Char(255)")]
		public string ConditionDesc
		{
			get
			{
				return this._ConditionDesc;
			}
			set
			{
				if ((this._ConditionDesc != value))
				{
					this.OnConditionDescChanging(value);
					this.SendPropertyChanging();
					this._ConditionDesc = value;
					this.SendPropertyChanged("ConditionDesc");
					this.OnConditionDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Condition", Storage="_Condition1", DbType="Char(255)")]
		public string Condition1
		{
			get
			{
				return this._Condition1;
			}
			set
			{
				if ((this._Condition1 != value))
				{
					this.OnCondition1Changing(value);
					this.SendPropertyChanging();
					this._Condition1 = value;
					this.SendPropertyChanged("Condition1");
					this.OnCondition1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Condition_ConditionActivity", Storage="_ConditionActivity", ThisKey="ConditionCode", OtherKey="ConditionCode", IsUnique=true, IsForeignKey=false)]
		public ConditionActivity ConditionActivity
		{
			get
			{
				return this._ConditionActivity.Entity;
			}
			set
			{
				ConditionActivity previousValue = this._ConditionActivity.Entity;
				if (((previousValue != value) 
							|| (this._ConditionActivity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConditionActivity.Entity = null;
						previousValue.Condition = null;
					}
					this._ConditionActivity.Entity = value;
					if ((value != null))
					{
						value.Condition = this;
					}
					this.SendPropertyChanged("ConditionActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Condition_ConditionService", Storage="_ConditionService", ThisKey="ConditionCode", OtherKey="ConditionCode", IsUnique=true, IsForeignKey=false)]
		public ConditionService ConditionService
		{
			get
			{
				return this._ConditionService.Entity;
			}
			set
			{
				ConditionService previousValue = this._ConditionService.Entity;
				if (((previousValue != value) 
							|| (this._ConditionService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConditionService.Entity = null;
						previousValue.Condition = null;
					}
					this._ConditionService.Entity = value;
					if ((value != null))
					{
						value.Condition = this;
					}
					this.SendPropertyChanged("ConditionService");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConditionActivity")]
	public partial class ConditionActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConditionCode;
		
		private string _ACTCode;
		
		private EntityRef<Activity> _Activity;
		
		private EntityRef<Condition> _Condition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionCodeChanging(string value);
    partial void OnConditionCodeChanged();
    partial void OnACTCodeChanging(string value);
    partial void OnACTCodeChanged();
    #endregion
		
		public ConditionActivity()
		{
			this._Activity = default(EntityRef<Activity>);
			this._Condition = default(EntityRef<Condition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					if (this._Condition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConditionCode = value;
					this.SendPropertyChanged("ConditionCode");
					this.OnConditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTCode", DbType="Char(255)")]
		public string ACTCode
		{
			get
			{
				return this._ACTCode;
			}
			set
			{
				if ((this._ACTCode != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACTCodeChanging(value);
					this.SendPropertyChanging();
					this._ACTCode = value;
					this.SendPropertyChanged("ACTCode");
					this.OnACTCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ConditionActivity", Storage="_Activity", ThisKey="ACTCode", OtherKey="ACTCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ConditionActivities.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ConditionActivities.Add(this);
						this._ACTCode = value.ACTCode;
					}
					else
					{
						this._ACTCode = default(string);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Condition_ConditionActivity", Storage="_Condition", ThisKey="ConditionCode", OtherKey="ConditionCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Condition Condition
		{
			get
			{
				return this._Condition.Entity;
			}
			set
			{
				Condition previousValue = this._Condition.Entity;
				if (((previousValue != value) 
							|| (this._Condition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Condition.Entity = null;
						previousValue.ConditionActivity = null;
					}
					this._Condition.Entity = value;
					if ((value != null))
					{
						value.ConditionActivity = this;
						this._ConditionCode = value.ConditionCode;
					}
					else
					{
						this._ConditionCode = default(string);
					}
					this.SendPropertyChanged("Condition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConditionService")]
	public partial class ConditionService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConditionCode;
		
		private string _SVCCODE;
		
		private EntityRef<Condition> _Condition;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionCodeChanging(string value);
    partial void OnConditionCodeChanged();
    partial void OnSVCCODEChanging(string value);
    partial void OnSVCCODEChanged();
    #endregion
		
		public ConditionService()
		{
			this._Condition = default(EntityRef<Condition>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					if (this._Condition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConditionCode = value;
					this.SendPropertyChanged("ConditionCode");
					this.OnConditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCCODE", DbType="Char(255)")]
		public string SVCCODE
		{
			get
			{
				return this._SVCCODE;
			}
			set
			{
				if ((this._SVCCODE != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSVCCODEChanging(value);
					this.SendPropertyChanging();
					this._SVCCODE = value;
					this.SendPropertyChanged("SVCCODE");
					this.OnSVCCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Condition_ConditionService", Storage="_Condition", ThisKey="ConditionCode", OtherKey="ConditionCode", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Condition Condition
		{
			get
			{
				return this._Condition.Entity;
			}
			set
			{
				Condition previousValue = this._Condition.Entity;
				if (((previousValue != value) 
							|| (this._Condition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Condition.Entity = null;
						previousValue.ConditionService = null;
					}
					this._Condition.Entity = value;
					if ((value != null))
					{
						value.ConditionService = this;
						this._ConditionCode = value.ConditionCode;
					}
					else
					{
						this._ConditionCode = default(string);
					}
					this.SendPropertyChanged("Condition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ConditionService", Storage="_Service", ThisKey="SVCCODE", OtherKey="SVCCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.ConditionServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.ConditionServices.Add(this);
						this._SVCCODE = value.SVCCode;
					}
					else
					{
						this._SVCCODE = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConditionsOfAcceptWelfare")]
	public partial class ConditionsOfAcceptWelfare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConditionsID;
		
		private string _ConditionsDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConditionsIDChanging(string value);
    partial void OnConditionsIDChanged();
    partial void OnConditionsDescriptionChanging(string value);
    partial void OnConditionsDescriptionChanged();
    #endregion
		
		public ConditionsOfAcceptWelfare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionsID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConditionsID
		{
			get
			{
				return this._ConditionsID;
			}
			set
			{
				if ((this._ConditionsID != value))
				{
					this.OnConditionsIDChanging(value);
					this.SendPropertyChanging();
					this._ConditionsID = value;
					this.SendPropertyChanged("ConditionsID");
					this.OnConditionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionsDescription", DbType="VarChar(MAX)")]
		public string ConditionsDescription
		{
			get
			{
				return this._ConditionsDescription;
			}
			set
			{
				if ((this._ConditionsDescription != value))
				{
					this.OnConditionsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ConditionsDescription = value;
					this.SendPropertyChanged("ConditionsDescription");
					this.OnConditionsDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisableLevel")]
	public partial class DisableLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DisableLevelID;
		
		private string _DisableLevelDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisableLevelIDChanging(string value);
    partial void OnDisableLevelIDChanged();
    partial void OnDisableLevelDescriptionChanging(string value);
    partial void OnDisableLevelDescriptionChanged();
    #endregion
		
		public DisableLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLevelID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DisableLevelID
		{
			get
			{
				return this._DisableLevelID;
			}
			set
			{
				if ((this._DisableLevelID != value))
				{
					this.OnDisableLevelIDChanging(value);
					this.SendPropertyChanging();
					this._DisableLevelID = value;
					this.SendPropertyChanged("DisableLevelID");
					this.OnDisableLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLevelDescription", DbType="VarChar(MAX)")]
		public string DisableLevelDescription
		{
			get
			{
				return this._DisableLevelDescription;
			}
			set
			{
				if ((this._DisableLevelDescription != value))
				{
					this.OnDisableLevelDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DisableLevelDescription = value;
					this.SendPropertyChanged("DisableLevelDescription");
					this.OnDisableLevelDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisableType")]
	public partial class DisableType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DBType;
		
		private string _DBName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDBTypeChanging(string value);
    partial void OnDBTypeChanged();
    partial void OnDBNameChanging(string value);
    partial void OnDBNameChanged();
    #endregion
		
		public DisableType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBType", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DBType
		{
			get
			{
				return this._DBType;
			}
			set
			{
				if ((this._DBType != value))
				{
					this.OnDBTypeChanging(value);
					this.SendPropertyChanging();
					this._DBType = value;
					this.SendPropertyChanged("DBType");
					this.OnDBTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBName", DbType="VarChar(MAX)")]
		public string DBName
		{
			get
			{
				return this._DBName;
			}
			set
			{
				if ((this._DBName != value))
				{
					this.OnDBNameChanging(value);
					this.SendPropertyChanging();
					this._DBName = value;
					this.SendPropertyChanged("DBName");
					this.OnDBNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Duration")]
	public partial class Duration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DCode;
		
		private string _DName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDCodeChanging(string value);
    partial void OnDCodeChanged();
    partial void OnDNameChanging(string value);
    partial void OnDNameChanged();
    #endregion
		
		public Duration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCode", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DCode
		{
			get
			{
				return this._DCode;
			}
			set
			{
				if ((this._DCode != value))
				{
					this.OnDCodeChanging(value);
					this.SendPropertyChanging();
					this._DCode = value;
					this.SendPropertyChanged("DCode");
					this.OnDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DName", DbType="Char(255)")]
		public string DName
		{
			get
			{
				return this._DName;
			}
			set
			{
				if ((this._DName != value))
				{
					this.OnDNameChanging(value);
					this.SendPropertyChanging();
					this._DName = value;
					this.SendPropertyChanged("DName");
					this.OnDNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducationChild")]
	public partial class EducationChild : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _EducationStatusID;
		
		private string _SchoolName;
		
		private string _Class;
		
		private string _NameofHumanAtSchool;
		
		private string _TelSchool;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnEducationStatusIDChanging(string value);
    partial void OnEducationStatusIDChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnNameofHumanAtSchoolChanging(string value);
    partial void OnNameofHumanAtSchoolChanged();
    partial void OnTelSchoolChanging(string value);
    partial void OnTelSchoolChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public EducationChild()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationStatusID", DbType="VarChar(2)")]
		public string EducationStatusID
		{
			get
			{
				return this._EducationStatusID;
			}
			set
			{
				if ((this._EducationStatusID != value))
				{
					this.OnEducationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._EducationStatusID = value;
					this.SendPropertyChanged("EducationStatusID");
					this.OnEducationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(MAX)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="VarChar(MAX)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameofHumanAtSchool", DbType="VarChar(MAX)")]
		public string NameofHumanAtSchool
		{
			get
			{
				return this._NameofHumanAtSchool;
			}
			set
			{
				if ((this._NameofHumanAtSchool != value))
				{
					this.OnNameofHumanAtSchoolChanging(value);
					this.SendPropertyChanging();
					this._NameofHumanAtSchool = value;
					this.SendPropertyChanged("NameofHumanAtSchool");
					this.OnNameofHumanAtSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelSchool", DbType="VarChar(12)")]
		public string TelSchool
		{
			get
			{
				return this._TelSchool;
			}
			set
			{
				if ((this._TelSchool != value))
				{
					this.OnTelSchoolChanging(value);
					this.SendPropertyChanging();
					this._TelSchool = value;
					this.SendPropertyChanged("TelSchool");
					this.OnTelSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducationLevel")]
	public partial class EducationLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EducationLevelID;
		
		private string _EducationLevelDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEducationLevelIDChanging(string value);
    partial void OnEducationLevelIDChanged();
    partial void OnEducationLevelDescriptionChanging(string value);
    partial void OnEducationLevelDescriptionChanged();
    #endregion
		
		public EducationLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelDescription", DbType="VarChar(MAX)")]
		public string EducationLevelDescription
		{
			get
			{
				return this._EducationLevelDescription;
			}
			set
			{
				if ((this._EducationLevelDescription != value))
				{
					this.OnEducationLevelDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelDescription = value;
					this.SendPropertyChanged("EducationLevelDescription");
					this.OnEducationLevelDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EducationStatus")]
	public partial class EducationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EducationStatusID;
		
		private string _EducationStatus1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEducationStatusIDChanging(string value);
    partial void OnEducationStatusIDChanged();
    partial void OnEducationStatus1Changing(string value);
    partial void OnEducationStatus1Changed();
    #endregion
		
		public EducationStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationStatusID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EducationStatusID
		{
			get
			{
				return this._EducationStatusID;
			}
			set
			{
				if ((this._EducationStatusID != value))
				{
					this.OnEducationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._EducationStatusID = value;
					this.SendPropertyChanged("EducationStatusID");
					this.OnEducationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EducationStatus", Storage="_EducationStatus1", DbType="VarChar(MAX)")]
		public string EducationStatus1
		{
			get
			{
				return this._EducationStatus1;
			}
			set
			{
				if ((this._EducationStatus1 != value))
				{
					this.OnEducationStatus1Changing(value);
					this.SendPropertyChanging();
					this._EducationStatus1 = value;
					this.SendPropertyChanged("EducationStatus1");
					this.OnEducationStatus1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExistingWelfare")]
	public partial class ExistingWelfare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _InsuranceOrg;
		
		private string _InsuranceType;
		
		private string _InsuranceCardID;
		
		private System.Nullable<System.DateTime> _InsuranceCardIssueDate;
		
		private System.Nullable<System.DateTime> _InsuranceCardExpDate;
		
		private string _InsurancePCU;
		
		private string _InsuranceHospital;
		
		private string _DisabilityAllowance;
		
		private string _CouponStudy;
		
		private string _DisableType;
		
		private string _DisableLevel;
		
		private string _DisableCardID;
		
		private System.Nullable<System.DateTime> _DisableCardIssueDate;
		
		private System.Nullable<System.DateTime> _DisableCardExpDate;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnInsuranceOrgChanging(string value);
    partial void OnInsuranceOrgChanged();
    partial void OnInsuranceTypeChanging(string value);
    partial void OnInsuranceTypeChanged();
    partial void OnInsuranceCardIDChanging(string value);
    partial void OnInsuranceCardIDChanged();
    partial void OnInsuranceCardIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsuranceCardIssueDateChanged();
    partial void OnInsuranceCardExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsuranceCardExpDateChanged();
    partial void OnInsurancePCUChanging(string value);
    partial void OnInsurancePCUChanged();
    partial void OnInsuranceHospitalChanging(string value);
    partial void OnInsuranceHospitalChanged();
    partial void OnDisabilityAllowanceChanging(string value);
    partial void OnDisabilityAllowanceChanged();
    partial void OnCouponStudyChanging(string value);
    partial void OnCouponStudyChanged();
    partial void OnDisableTypeChanging(string value);
    partial void OnDisableTypeChanged();
    partial void OnDisableLevelChanging(string value);
    partial void OnDisableLevelChanged();
    partial void OnDisableCardIDChanging(string value);
    partial void OnDisableCardIDChanged();
    partial void OnDisableCardIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDisableCardIssueDateChanged();
    partial void OnDisableCardExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDisableCardExpDateChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public ExistingWelfare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceOrg", DbType="VarChar(MAX)")]
		public string InsuranceOrg
		{
			get
			{
				return this._InsuranceOrg;
			}
			set
			{
				if ((this._InsuranceOrg != value))
				{
					this.OnInsuranceOrgChanging(value);
					this.SendPropertyChanging();
					this._InsuranceOrg = value;
					this.SendPropertyChanged("InsuranceOrg");
					this.OnInsuranceOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceType", DbType="VarChar(2)")]
		public string InsuranceType
		{
			get
			{
				return this._InsuranceType;
			}
			set
			{
				if ((this._InsuranceType != value))
				{
					this.OnInsuranceTypeChanging(value);
					this.SendPropertyChanging();
					this._InsuranceType = value;
					this.SendPropertyChanged("InsuranceType");
					this.OnInsuranceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceCardID", DbType="VarChar(15)")]
		public string InsuranceCardID
		{
			get
			{
				return this._InsuranceCardID;
			}
			set
			{
				if ((this._InsuranceCardID != value))
				{
					this.OnInsuranceCardIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceCardID = value;
					this.SendPropertyChanged("InsuranceCardID");
					this.OnInsuranceCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceCardIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsuranceCardIssueDate
		{
			get
			{
				return this._InsuranceCardIssueDate;
			}
			set
			{
				if ((this._InsuranceCardIssueDate != value))
				{
					this.OnInsuranceCardIssueDateChanging(value);
					this.SendPropertyChanging();
					this._InsuranceCardIssueDate = value;
					this.SendPropertyChanged("InsuranceCardIssueDate");
					this.OnInsuranceCardIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceCardExpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsuranceCardExpDate
		{
			get
			{
				return this._InsuranceCardExpDate;
			}
			set
			{
				if ((this._InsuranceCardExpDate != value))
				{
					this.OnInsuranceCardExpDateChanging(value);
					this.SendPropertyChanging();
					this._InsuranceCardExpDate = value;
					this.SendPropertyChanged("InsuranceCardExpDate");
					this.OnInsuranceCardExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurancePCU", DbType="VarChar(MAX)")]
		public string InsurancePCU
		{
			get
			{
				return this._InsurancePCU;
			}
			set
			{
				if ((this._InsurancePCU != value))
				{
					this.OnInsurancePCUChanging(value);
					this.SendPropertyChanging();
					this._InsurancePCU = value;
					this.SendPropertyChanged("InsurancePCU");
					this.OnInsurancePCUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceHospital", DbType="VarChar(MAX)")]
		public string InsuranceHospital
		{
			get
			{
				return this._InsuranceHospital;
			}
			set
			{
				if ((this._InsuranceHospital != value))
				{
					this.OnInsuranceHospitalChanging(value);
					this.SendPropertyChanging();
					this._InsuranceHospital = value;
					this.SendPropertyChanged("InsuranceHospital");
					this.OnInsuranceHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabilityAllowance", DbType="VarChar(MAX)")]
		public string DisabilityAllowance
		{
			get
			{
				return this._DisabilityAllowance;
			}
			set
			{
				if ((this._DisabilityAllowance != value))
				{
					this.OnDisabilityAllowanceChanging(value);
					this.SendPropertyChanging();
					this._DisabilityAllowance = value;
					this.SendPropertyChanged("DisabilityAllowance");
					this.OnDisabilityAllowanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponStudy", DbType="VarChar(MAX)")]
		public string CouponStudy
		{
			get
			{
				return this._CouponStudy;
			}
			set
			{
				if ((this._CouponStudy != value))
				{
					this.OnCouponStudyChanging(value);
					this.SendPropertyChanging();
					this._CouponStudy = value;
					this.SendPropertyChanged("CouponStudy");
					this.OnCouponStudyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableType", DbType="VarChar(2)")]
		public string DisableType
		{
			get
			{
				return this._DisableType;
			}
			set
			{
				if ((this._DisableType != value))
				{
					this.OnDisableTypeChanging(value);
					this.SendPropertyChanging();
					this._DisableType = value;
					this.SendPropertyChanged("DisableType");
					this.OnDisableTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLevel", DbType="VarChar(2)")]
		public string DisableLevel
		{
			get
			{
				return this._DisableLevel;
			}
			set
			{
				if ((this._DisableLevel != value))
				{
					this.OnDisableLevelChanging(value);
					this.SendPropertyChanging();
					this._DisableLevel = value;
					this.SendPropertyChanged("DisableLevel");
					this.OnDisableLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableCardID", DbType="VarChar(15)")]
		public string DisableCardID
		{
			get
			{
				return this._DisableCardID;
			}
			set
			{
				if ((this._DisableCardID != value))
				{
					this.OnDisableCardIDChanging(value);
					this.SendPropertyChanging();
					this._DisableCardID = value;
					this.SendPropertyChanged("DisableCardID");
					this.OnDisableCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableCardIssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisableCardIssueDate
		{
			get
			{
				return this._DisableCardIssueDate;
			}
			set
			{
				if ((this._DisableCardIssueDate != value))
				{
					this.OnDisableCardIssueDateChanging(value);
					this.SendPropertyChanging();
					this._DisableCardIssueDate = value;
					this.SendPropertyChanged("DisableCardIssueDate");
					this.OnDisableCardIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableCardExpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DisableCardExpDate
		{
			get
			{
				return this._DisableCardExpDate;
			}
			set
			{
				if ((this._DisableCardExpDate != value))
				{
					this.OnDisableCardExpDateChanging(value);
					this.SendPropertyChanging();
					this._DisableCardExpDate = value;
					this.SendPropertyChanged("DisableCardExpDate");
					this.OnDisableCardExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Family")]
	public partial class Family : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FMemberCID;
		
		private string _CID;
		
		private string _Title;
		
		private string _Relationship;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MariageStatus;
		
		private string _LiveStatus;
		
		private string _EducationLevel;
		
		private string _Occupation;
		
		private string _Nation;
		
		private string _Race;
		
		private string _Religion;
		
		private string _AddressOccupation;
		
		private System.Nullable<float> _IncomePerMonth;
		
		private System.Nullable<float> _OtherIncome;
		
		private string _OtherIncomeFrom;
		
		private string _LiveHouseNumber;
		
		private string _LiveMooNumber;
		
		private string _LiveVillageName;
		
		private string _LiveAlley;
		
		private string _LiveStreetName;
		
		private string _LiveTumbon;
		
		private string _LiveCity;
		
		private string _LiveProvince;
		
		private string _LivePostCode;
		
		private System.Nullable<System.DateTime> _LiveMoveInDate;
		
		private System.Nullable<System.DateTime> _LiveMoveOutDate;
		
		private string _LiveMoveOutReason;
		
		private string _CensusHouseNumber;
		
		private string _CensusMooNumber;
		
		private string _CensusVillageName;
		
		private string _CensusAlley;
		
		private string _CensusStreetName;
		
		private string _CensusTumbon;
		
		private string _CensusCity;
		
		private string _CensusProvince;
		
		private string _CensusPostCode;
		
		private System.Nullable<System.DateTime> _CensusMoveInDate;
		
		private System.Nullable<System.DateTime> _CensusMoveOutDate;
		
		private string _CensusMoveOutReason;
		
		private string _CarerStatus;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFMemberCIDChanging(string value);
    partial void OnFMemberCIDChanged();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMariageStatusChanging(string value);
    partial void OnMariageStatusChanged();
    partial void OnLiveStatusChanging(string value);
    partial void OnLiveStatusChanged();
    partial void OnEducationLevelChanging(string value);
    partial void OnEducationLevelChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnAddressOccupationChanging(string value);
    partial void OnAddressOccupationChanged();
    partial void OnIncomePerMonthChanging(System.Nullable<float> value);
    partial void OnIncomePerMonthChanged();
    partial void OnOtherIncomeChanging(System.Nullable<float> value);
    partial void OnOtherIncomeChanged();
    partial void OnOtherIncomeFromChanging(string value);
    partial void OnOtherIncomeFromChanged();
    partial void OnLiveHouseNumberChanging(string value);
    partial void OnLiveHouseNumberChanged();
    partial void OnLiveMooNumberChanging(string value);
    partial void OnLiveMooNumberChanged();
    partial void OnLiveVillageNameChanging(string value);
    partial void OnLiveVillageNameChanged();
    partial void OnLiveAlleyChanging(string value);
    partial void OnLiveAlleyChanged();
    partial void OnLiveStreetNameChanging(string value);
    partial void OnLiveStreetNameChanged();
    partial void OnLiveTumbonChanging(string value);
    partial void OnLiveTumbonChanged();
    partial void OnLiveCityChanging(string value);
    partial void OnLiveCityChanged();
    partial void OnLiveProvinceChanging(string value);
    partial void OnLiveProvinceChanged();
    partial void OnLivePostCodeChanging(string value);
    partial void OnLivePostCodeChanged();
    partial void OnLiveMoveInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLiveMoveInDateChanged();
    partial void OnLiveMoveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLiveMoveOutDateChanged();
    partial void OnLiveMoveOutReasonChanging(string value);
    partial void OnLiveMoveOutReasonChanged();
    partial void OnCensusHouseNumberChanging(string value);
    partial void OnCensusHouseNumberChanged();
    partial void OnCensusMooNumberChanging(string value);
    partial void OnCensusMooNumberChanged();
    partial void OnCensusVillageNameChanging(string value);
    partial void OnCensusVillageNameChanged();
    partial void OnCensusAlleyChanging(string value);
    partial void OnCensusAlleyChanged();
    partial void OnCensusStreetNameChanging(string value);
    partial void OnCensusStreetNameChanged();
    partial void OnCensusTumbonChanging(string value);
    partial void OnCensusTumbonChanged();
    partial void OnCensusCityChanging(string value);
    partial void OnCensusCityChanged();
    partial void OnCensusProvinceChanging(string value);
    partial void OnCensusProvinceChanged();
    partial void OnCensusPostCodeChanging(string value);
    partial void OnCensusPostCodeChanged();
    partial void OnCensusMoveInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCensusMoveInDateChanged();
    partial void OnCensusMoveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCensusMoveOutDateChanged();
    partial void OnCensusMoveOutReasonChanging(string value);
    partial void OnCensusMoveOutReasonChanged();
    partial void OnCarerStatusChanging(string value);
    partial void OnCarerStatusChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public Family()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FMemberCID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FMemberCID
		{
			get
			{
				return this._FMemberCID;
			}
			set
			{
				if ((this._FMemberCID != value))
				{
					this.OnFMemberCIDChanging(value);
					this.SendPropertyChanging();
					this._FMemberCID = value;
					this.SendPropertyChanged("FMemberCID");
					this.OnFMemberCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(2)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="VarChar(10)")]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MariageStatus", DbType="VarChar(2)")]
		public string MariageStatus
		{
			get
			{
				return this._MariageStatus;
			}
			set
			{
				if ((this._MariageStatus != value))
				{
					this.OnMariageStatusChanging(value);
					this.SendPropertyChanging();
					this._MariageStatus = value;
					this.SendPropertyChanged("MariageStatus");
					this.OnMariageStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStatus", DbType="VarChar(2)")]
		public string LiveStatus
		{
			get
			{
				return this._LiveStatus;
			}
			set
			{
				if ((this._LiveStatus != value))
				{
					this.OnLiveStatusChanging(value);
					this.SendPropertyChanging();
					this._LiveStatus = value;
					this.SendPropertyChanged("LiveStatus");
					this.OnLiveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevel", DbType="VarChar(2)")]
		public string EducationLevel
		{
			get
			{
				return this._EducationLevel;
			}
			set
			{
				if ((this._EducationLevel != value))
				{
					this.OnEducationLevelChanging(value);
					this.SendPropertyChanging();
					this._EducationLevel = value;
					this.SendPropertyChanged("EducationLevel");
					this.OnEducationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(2)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="VarChar(MAX)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="VarChar(MAX)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(MAX)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOccupation", DbType="VarChar(MAX)")]
		public string AddressOccupation
		{
			get
			{
				return this._AddressOccupation;
			}
			set
			{
				if ((this._AddressOccupation != value))
				{
					this.OnAddressOccupationChanging(value);
					this.SendPropertyChanging();
					this._AddressOccupation = value;
					this.SendPropertyChanged("AddressOccupation");
					this.OnAddressOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomePerMonth", DbType="Real")]
		public System.Nullable<float> IncomePerMonth
		{
			get
			{
				return this._IncomePerMonth;
			}
			set
			{
				if ((this._IncomePerMonth != value))
				{
					this.OnIncomePerMonthChanging(value);
					this.SendPropertyChanging();
					this._IncomePerMonth = value;
					this.SendPropertyChanged("IncomePerMonth");
					this.OnIncomePerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncome", DbType="Real")]
		public System.Nullable<float> OtherIncome
		{
			get
			{
				return this._OtherIncome;
			}
			set
			{
				if ((this._OtherIncome != value))
				{
					this.OnOtherIncomeChanging(value);
					this.SendPropertyChanging();
					this._OtherIncome = value;
					this.SendPropertyChanged("OtherIncome");
					this.OnOtherIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncomeFrom", DbType="VarChar(MAX)")]
		public string OtherIncomeFrom
		{
			get
			{
				return this._OtherIncomeFrom;
			}
			set
			{
				if ((this._OtherIncomeFrom != value))
				{
					this.OnOtherIncomeFromChanging(value);
					this.SendPropertyChanging();
					this._OtherIncomeFrom = value;
					this.SendPropertyChanged("OtherIncomeFrom");
					this.OnOtherIncomeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveHouseNumber", DbType="VarChar(MAX)")]
		public string LiveHouseNumber
		{
			get
			{
				return this._LiveHouseNumber;
			}
			set
			{
				if ((this._LiveHouseNumber != value))
				{
					this.OnLiveHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._LiveHouseNumber = value;
					this.SendPropertyChanged("LiveHouseNumber");
					this.OnLiveHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMooNumber", DbType="VarChar(MAX)")]
		public string LiveMooNumber
		{
			get
			{
				return this._LiveMooNumber;
			}
			set
			{
				if ((this._LiveMooNumber != value))
				{
					this.OnLiveMooNumberChanging(value);
					this.SendPropertyChanging();
					this._LiveMooNumber = value;
					this.SendPropertyChanged("LiveMooNumber");
					this.OnLiveMooNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveVillageName", DbType="VarChar(MAX)")]
		public string LiveVillageName
		{
			get
			{
				return this._LiveVillageName;
			}
			set
			{
				if ((this._LiveVillageName != value))
				{
					this.OnLiveVillageNameChanging(value);
					this.SendPropertyChanging();
					this._LiveVillageName = value;
					this.SendPropertyChanged("LiveVillageName");
					this.OnLiveVillageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveAlley", DbType="VarChar(MAX)")]
		public string LiveAlley
		{
			get
			{
				return this._LiveAlley;
			}
			set
			{
				if ((this._LiveAlley != value))
				{
					this.OnLiveAlleyChanging(value);
					this.SendPropertyChanging();
					this._LiveAlley = value;
					this.SendPropertyChanged("LiveAlley");
					this.OnLiveAlleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStreetName", DbType="VarChar(MAX)")]
		public string LiveStreetName
		{
			get
			{
				return this._LiveStreetName;
			}
			set
			{
				if ((this._LiveStreetName != value))
				{
					this.OnLiveStreetNameChanging(value);
					this.SendPropertyChanging();
					this._LiveStreetName = value;
					this.SendPropertyChanged("LiveStreetName");
					this.OnLiveStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveTumbon", DbType="VarChar(10)")]
		public string LiveTumbon
		{
			get
			{
				return this._LiveTumbon;
			}
			set
			{
				if ((this._LiveTumbon != value))
				{
					this.OnLiveTumbonChanging(value);
					this.SendPropertyChanging();
					this._LiveTumbon = value;
					this.SendPropertyChanged("LiveTumbon");
					this.OnLiveTumbonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveCity", DbType="VarChar(10)")]
		public string LiveCity
		{
			get
			{
				return this._LiveCity;
			}
			set
			{
				if ((this._LiveCity != value))
				{
					this.OnLiveCityChanging(value);
					this.SendPropertyChanging();
					this._LiveCity = value;
					this.SendPropertyChanged("LiveCity");
					this.OnLiveCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveProvince", DbType="VarChar(10)")]
		public string LiveProvince
		{
			get
			{
				return this._LiveProvince;
			}
			set
			{
				if ((this._LiveProvince != value))
				{
					this.OnLiveProvinceChanging(value);
					this.SendPropertyChanging();
					this._LiveProvince = value;
					this.SendPropertyChanged("LiveProvince");
					this.OnLiveProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivePostCode", DbType="VarChar(5)")]
		public string LivePostCode
		{
			get
			{
				return this._LivePostCode;
			}
			set
			{
				if ((this._LivePostCode != value))
				{
					this.OnLivePostCodeChanging(value);
					this.SendPropertyChanging();
					this._LivePostCode = value;
					this.SendPropertyChanged("LivePostCode");
					this.OnLivePostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LiveMoveInDate
		{
			get
			{
				return this._LiveMoveInDate;
			}
			set
			{
				if ((this._LiveMoveInDate != value))
				{
					this.OnLiveMoveInDateChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveInDate = value;
					this.SendPropertyChanged("LiveMoveInDate");
					this.OnLiveMoveInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LiveMoveOutDate
		{
			get
			{
				return this._LiveMoveOutDate;
			}
			set
			{
				if ((this._LiveMoveOutDate != value))
				{
					this.OnLiveMoveOutDateChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveOutDate = value;
					this.SendPropertyChanged("LiveMoveOutDate");
					this.OnLiveMoveOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveOutReason", DbType="VarChar(MAX)")]
		public string LiveMoveOutReason
		{
			get
			{
				return this._LiveMoveOutReason;
			}
			set
			{
				if ((this._LiveMoveOutReason != value))
				{
					this.OnLiveMoveOutReasonChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveOutReason = value;
					this.SendPropertyChanged("LiveMoveOutReason");
					this.OnLiveMoveOutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusHouseNumber", DbType="VarChar(MAX)")]
		public string CensusHouseNumber
		{
			get
			{
				return this._CensusHouseNumber;
			}
			set
			{
				if ((this._CensusHouseNumber != value))
				{
					this.OnCensusHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._CensusHouseNumber = value;
					this.SendPropertyChanged("CensusHouseNumber");
					this.OnCensusHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMooNumber", DbType="VarChar(MAX)")]
		public string CensusMooNumber
		{
			get
			{
				return this._CensusMooNumber;
			}
			set
			{
				if ((this._CensusMooNumber != value))
				{
					this.OnCensusMooNumberChanging(value);
					this.SendPropertyChanging();
					this._CensusMooNumber = value;
					this.SendPropertyChanged("CensusMooNumber");
					this.OnCensusMooNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusVillageName", DbType="VarChar(MAX)")]
		public string CensusVillageName
		{
			get
			{
				return this._CensusVillageName;
			}
			set
			{
				if ((this._CensusVillageName != value))
				{
					this.OnCensusVillageNameChanging(value);
					this.SendPropertyChanging();
					this._CensusVillageName = value;
					this.SendPropertyChanged("CensusVillageName");
					this.OnCensusVillageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusAlley", DbType="VarChar(MAX)")]
		public string CensusAlley
		{
			get
			{
				return this._CensusAlley;
			}
			set
			{
				if ((this._CensusAlley != value))
				{
					this.OnCensusAlleyChanging(value);
					this.SendPropertyChanging();
					this._CensusAlley = value;
					this.SendPropertyChanged("CensusAlley");
					this.OnCensusAlleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusStreetName", DbType="VarChar(MAX)")]
		public string CensusStreetName
		{
			get
			{
				return this._CensusStreetName;
			}
			set
			{
				if ((this._CensusStreetName != value))
				{
					this.OnCensusStreetNameChanging(value);
					this.SendPropertyChanging();
					this._CensusStreetName = value;
					this.SendPropertyChanged("CensusStreetName");
					this.OnCensusStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusTumbon", DbType="VarChar(10)")]
		public string CensusTumbon
		{
			get
			{
				return this._CensusTumbon;
			}
			set
			{
				if ((this._CensusTumbon != value))
				{
					this.OnCensusTumbonChanging(value);
					this.SendPropertyChanging();
					this._CensusTumbon = value;
					this.SendPropertyChanged("CensusTumbon");
					this.OnCensusTumbonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusCity", DbType="VarChar(10)")]
		public string CensusCity
		{
			get
			{
				return this._CensusCity;
			}
			set
			{
				if ((this._CensusCity != value))
				{
					this.OnCensusCityChanging(value);
					this.SendPropertyChanging();
					this._CensusCity = value;
					this.SendPropertyChanged("CensusCity");
					this.OnCensusCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusProvince", DbType="VarChar(10)")]
		public string CensusProvince
		{
			get
			{
				return this._CensusProvince;
			}
			set
			{
				if ((this._CensusProvince != value))
				{
					this.OnCensusProvinceChanging(value);
					this.SendPropertyChanging();
					this._CensusProvince = value;
					this.SendPropertyChanged("CensusProvince");
					this.OnCensusProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusPostCode", DbType="VarChar(5)")]
		public string CensusPostCode
		{
			get
			{
				return this._CensusPostCode;
			}
			set
			{
				if ((this._CensusPostCode != value))
				{
					this.OnCensusPostCodeChanging(value);
					this.SendPropertyChanging();
					this._CensusPostCode = value;
					this.SendPropertyChanged("CensusPostCode");
					this.OnCensusPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CensusMoveInDate
		{
			get
			{
				return this._CensusMoveInDate;
			}
			set
			{
				if ((this._CensusMoveInDate != value))
				{
					this.OnCensusMoveInDateChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveInDate = value;
					this.SendPropertyChanged("CensusMoveInDate");
					this.OnCensusMoveInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CensusMoveOutDate
		{
			get
			{
				return this._CensusMoveOutDate;
			}
			set
			{
				if ((this._CensusMoveOutDate != value))
				{
					this.OnCensusMoveOutDateChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveOutDate = value;
					this.SendPropertyChanged("CensusMoveOutDate");
					this.OnCensusMoveOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveOutReason", DbType="VarChar(MAX)")]
		public string CensusMoveOutReason
		{
			get
			{
				return this._CensusMoveOutReason;
			}
			set
			{
				if ((this._CensusMoveOutReason != value))
				{
					this.OnCensusMoveOutReasonChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveOutReason = value;
					this.SendPropertyChanged("CensusMoveOutReason");
					this.OnCensusMoveOutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarerStatus", DbType="VarChar(1)")]
		public string CarerStatus
		{
			get
			{
				return this._CarerStatus;
			}
			set
			{
				if ((this._CarerStatus != value))
				{
					this.OnCarerStatusChanging(value);
					this.SendPropertyChanging();
					this._CarerStatus = value;
					this.SendPropertyChanged("CarerStatus");
					this.OnCarerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Family", Storage="_Person", ThisKey="CID", OtherKey="CID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Families.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Families.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(string);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyEconomy")]
	public partial class FamilyEconomy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _NumberFamilyMember;
		
		private string _NumberPregnancy;
		
		private string _NumberChildren;
		
		private string _NumberSenior;
		
		private string _NumberUnderPriviledge;
		
		private string _NumberMemberswithincome;
		
		private string _NumberMembersnotincome;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnNumberFamilyMemberChanging(string value);
    partial void OnNumberFamilyMemberChanged();
    partial void OnNumberPregnancyChanging(string value);
    partial void OnNumberPregnancyChanged();
    partial void OnNumberChildrenChanging(string value);
    partial void OnNumberChildrenChanged();
    partial void OnNumberSeniorChanging(string value);
    partial void OnNumberSeniorChanged();
    partial void OnNumberUnderPriviledgeChanging(string value);
    partial void OnNumberUnderPriviledgeChanged();
    partial void OnNumberMemberswithincomeChanging(string value);
    partial void OnNumberMemberswithincomeChanged();
    partial void OnNumberMembersnotincomeChanging(string value);
    partial void OnNumberMembersnotincomeChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public FamilyEconomy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberFamilyMember", DbType="Char(255)")]
		public string NumberFamilyMember
		{
			get
			{
				return this._NumberFamilyMember;
			}
			set
			{
				if ((this._NumberFamilyMember != value))
				{
					this.OnNumberFamilyMemberChanging(value);
					this.SendPropertyChanging();
					this._NumberFamilyMember = value;
					this.SendPropertyChanged("NumberFamilyMember");
					this.OnNumberFamilyMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPregnancy", DbType="Char(255)")]
		public string NumberPregnancy
		{
			get
			{
				return this._NumberPregnancy;
			}
			set
			{
				if ((this._NumberPregnancy != value))
				{
					this.OnNumberPregnancyChanging(value);
					this.SendPropertyChanging();
					this._NumberPregnancy = value;
					this.SendPropertyChanged("NumberPregnancy");
					this.OnNumberPregnancyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberChildren", DbType="Char(255)")]
		public string NumberChildren
		{
			get
			{
				return this._NumberChildren;
			}
			set
			{
				if ((this._NumberChildren != value))
				{
					this.OnNumberChildrenChanging(value);
					this.SendPropertyChanging();
					this._NumberChildren = value;
					this.SendPropertyChanged("NumberChildren");
					this.OnNumberChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberSenior", DbType="Char(255)")]
		public string NumberSenior
		{
			get
			{
				return this._NumberSenior;
			}
			set
			{
				if ((this._NumberSenior != value))
				{
					this.OnNumberSeniorChanging(value);
					this.SendPropertyChanging();
					this._NumberSenior = value;
					this.SendPropertyChanged("NumberSenior");
					this.OnNumberSeniorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberUnderPriviledge", DbType="Char(255)")]
		public string NumberUnderPriviledge
		{
			get
			{
				return this._NumberUnderPriviledge;
			}
			set
			{
				if ((this._NumberUnderPriviledge != value))
				{
					this.OnNumberUnderPriviledgeChanging(value);
					this.SendPropertyChanging();
					this._NumberUnderPriviledge = value;
					this.SendPropertyChanged("NumberUnderPriviledge");
					this.OnNumberUnderPriviledgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberMemberswithincome", DbType="Char(255)")]
		public string NumberMemberswithincome
		{
			get
			{
				return this._NumberMemberswithincome;
			}
			set
			{
				if ((this._NumberMemberswithincome != value))
				{
					this.OnNumberMemberswithincomeChanging(value);
					this.SendPropertyChanging();
					this._NumberMemberswithincome = value;
					this.SendPropertyChanged("NumberMemberswithincome");
					this.OnNumberMemberswithincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberMembersnotincome", DbType="Char(255)")]
		public string NumberMembersnotincome
		{
			get
			{
				return this._NumberMembersnotincome;
			}
			set
			{
				if ((this._NumberMembersnotincome != value))
				{
					this.OnNumberMembersnotincomeChanging(value);
					this.SendPropertyChanging();
					this._NumberMembersnotincome = value;
					this.SendPropertyChanged("NumberMembersnotincome");
					this.OnNumberMembersnotincomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FamilyinfoTemp")]
	public partial class FamilyinfoTemp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FMemberCID;
		
		private string _CID;
		
		private string _Title;
		
		private string _Relation;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Relationship;
		
		private string _MariageStatus;
		
		private string _LiveStatus;
		
		private string _EducationLevel;
		
		private string _Occupation;
		
		private string _Nation;
		
		private string _Race;
		
		private string _Religion;
		
		private string _AddressOccupation;
		
		private System.Nullable<float> _IncomePerMonth;
		
		private System.Nullable<float> _OtherIncome;
		
		private string _OtherIncomeFrom;
		
		private string _LiveHouseNumber;
		
		private string _LiveMooNumber;
		
		private string _LiveVillageName;
		
		private string _LiveAlley;
		
		private string _LiveStreetName;
		
		private string _LiveTumbon;
		
		private string _LiveCity;
		
		private string _LiveProvince;
		
		private string _LivePostCode;
		
		private System.Nullable<System.DateTime> _LiveMoveInDate;
		
		private System.Nullable<System.DateTime> _LiveMoveOutDate;
		
		private string _LiveMoveOutReason;
		
		private string _CensusHouseNumber;
		
		private string _CensusMooNumber;
		
		private string _CensusVillageName;
		
		private string _CensusAlley;
		
		private string _CensusStreetName;
		
		private string _CensusTumbon;
		
		private string _CensusCity;
		
		private string _CensusProvince;
		
		private string _CensusPostCode;
		
		private System.Nullable<System.DateTime> _CensusMoveInDate;
		
		private System.Nullable<System.DateTime> _CensusMoveOutDate;
		
		private string _CensusMoveOutReason;
		
		private string _CarerStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFMemberCIDChanging(string value);
    partial void OnFMemberCIDChanged();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnMariageStatusChanging(string value);
    partial void OnMariageStatusChanged();
    partial void OnLiveStatusChanging(string value);
    partial void OnLiveStatusChanged();
    partial void OnEducationLevelChanging(string value);
    partial void OnEducationLevelChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnAddressOccupationChanging(string value);
    partial void OnAddressOccupationChanged();
    partial void OnIncomePerMonthChanging(System.Nullable<float> value);
    partial void OnIncomePerMonthChanged();
    partial void OnOtherIncomeChanging(System.Nullable<float> value);
    partial void OnOtherIncomeChanged();
    partial void OnOtherIncomeFromChanging(string value);
    partial void OnOtherIncomeFromChanged();
    partial void OnLiveHouseNumberChanging(string value);
    partial void OnLiveHouseNumberChanged();
    partial void OnLiveMooNumberChanging(string value);
    partial void OnLiveMooNumberChanged();
    partial void OnLiveVillageNameChanging(string value);
    partial void OnLiveVillageNameChanged();
    partial void OnLiveAlleyChanging(string value);
    partial void OnLiveAlleyChanged();
    partial void OnLiveStreetNameChanging(string value);
    partial void OnLiveStreetNameChanged();
    partial void OnLiveTumbonChanging(string value);
    partial void OnLiveTumbonChanged();
    partial void OnLiveCityChanging(string value);
    partial void OnLiveCityChanged();
    partial void OnLiveProvinceChanging(string value);
    partial void OnLiveProvinceChanged();
    partial void OnLivePostCodeChanging(string value);
    partial void OnLivePostCodeChanged();
    partial void OnLiveMoveInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLiveMoveInDateChanged();
    partial void OnLiveMoveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLiveMoveOutDateChanged();
    partial void OnLiveMoveOutReasonChanging(string value);
    partial void OnLiveMoveOutReasonChanged();
    partial void OnCensusHouseNumberChanging(string value);
    partial void OnCensusHouseNumberChanged();
    partial void OnCensusMooNumberChanging(string value);
    partial void OnCensusMooNumberChanged();
    partial void OnCensusVillageNameChanging(string value);
    partial void OnCensusVillageNameChanged();
    partial void OnCensusAlleyChanging(string value);
    partial void OnCensusAlleyChanged();
    partial void OnCensusStreetNameChanging(string value);
    partial void OnCensusStreetNameChanged();
    partial void OnCensusTumbonChanging(string value);
    partial void OnCensusTumbonChanged();
    partial void OnCensusCityChanging(string value);
    partial void OnCensusCityChanged();
    partial void OnCensusProvinceChanging(string value);
    partial void OnCensusProvinceChanged();
    partial void OnCensusPostCodeChanging(string value);
    partial void OnCensusPostCodeChanged();
    partial void OnCensusMoveInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCensusMoveInDateChanged();
    partial void OnCensusMoveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCensusMoveOutDateChanged();
    partial void OnCensusMoveOutReasonChanging(string value);
    partial void OnCensusMoveOutReasonChanged();
    partial void OnCarerStatusChanging(string value);
    partial void OnCarerStatusChanged();
    #endregion
		
		public FamilyinfoTemp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FMemberCID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FMemberCID
		{
			get
			{
				return this._FMemberCID;
			}
			set
			{
				if ((this._FMemberCID != value))
				{
					this.OnFMemberCIDChanging(value);
					this.SendPropertyChanging();
					this._FMemberCID = value;
					this.SendPropertyChanged("FMemberCID");
					this.OnFMemberCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(2)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="VarChar(10)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="VarChar(2)")]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MariageStatus", DbType="VarChar(2)")]
		public string MariageStatus
		{
			get
			{
				return this._MariageStatus;
			}
			set
			{
				if ((this._MariageStatus != value))
				{
					this.OnMariageStatusChanging(value);
					this.SendPropertyChanging();
					this._MariageStatus = value;
					this.SendPropertyChanged("MariageStatus");
					this.OnMariageStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStatus", DbType="VarChar(2)")]
		public string LiveStatus
		{
			get
			{
				return this._LiveStatus;
			}
			set
			{
				if ((this._LiveStatus != value))
				{
					this.OnLiveStatusChanging(value);
					this.SendPropertyChanging();
					this._LiveStatus = value;
					this.SendPropertyChanged("LiveStatus");
					this.OnLiveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevel", DbType="VarChar(2)")]
		public string EducationLevel
		{
			get
			{
				return this._EducationLevel;
			}
			set
			{
				if ((this._EducationLevel != value))
				{
					this.OnEducationLevelChanging(value);
					this.SendPropertyChanging();
					this._EducationLevel = value;
					this.SendPropertyChanged("EducationLevel");
					this.OnEducationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(2)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="VarChar(MAX)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="VarChar(MAX)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(MAX)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOccupation", DbType="VarChar(MAX)")]
		public string AddressOccupation
		{
			get
			{
				return this._AddressOccupation;
			}
			set
			{
				if ((this._AddressOccupation != value))
				{
					this.OnAddressOccupationChanging(value);
					this.SendPropertyChanging();
					this._AddressOccupation = value;
					this.SendPropertyChanged("AddressOccupation");
					this.OnAddressOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomePerMonth", DbType="Real")]
		public System.Nullable<float> IncomePerMonth
		{
			get
			{
				return this._IncomePerMonth;
			}
			set
			{
				if ((this._IncomePerMonth != value))
				{
					this.OnIncomePerMonthChanging(value);
					this.SendPropertyChanging();
					this._IncomePerMonth = value;
					this.SendPropertyChanged("IncomePerMonth");
					this.OnIncomePerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncome", DbType="Real")]
		public System.Nullable<float> OtherIncome
		{
			get
			{
				return this._OtherIncome;
			}
			set
			{
				if ((this._OtherIncome != value))
				{
					this.OnOtherIncomeChanging(value);
					this.SendPropertyChanging();
					this._OtherIncome = value;
					this.SendPropertyChanged("OtherIncome");
					this.OnOtherIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherIncomeFrom", DbType="VarChar(MAX)")]
		public string OtherIncomeFrom
		{
			get
			{
				return this._OtherIncomeFrom;
			}
			set
			{
				if ((this._OtherIncomeFrom != value))
				{
					this.OnOtherIncomeFromChanging(value);
					this.SendPropertyChanging();
					this._OtherIncomeFrom = value;
					this.SendPropertyChanged("OtherIncomeFrom");
					this.OnOtherIncomeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveHouseNumber", DbType="VarChar(MAX)")]
		public string LiveHouseNumber
		{
			get
			{
				return this._LiveHouseNumber;
			}
			set
			{
				if ((this._LiveHouseNumber != value))
				{
					this.OnLiveHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._LiveHouseNumber = value;
					this.SendPropertyChanged("LiveHouseNumber");
					this.OnLiveHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMooNumber", DbType="VarChar(MAX)")]
		public string LiveMooNumber
		{
			get
			{
				return this._LiveMooNumber;
			}
			set
			{
				if ((this._LiveMooNumber != value))
				{
					this.OnLiveMooNumberChanging(value);
					this.SendPropertyChanging();
					this._LiveMooNumber = value;
					this.SendPropertyChanged("LiveMooNumber");
					this.OnLiveMooNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveVillageName", DbType="VarChar(MAX)")]
		public string LiveVillageName
		{
			get
			{
				return this._LiveVillageName;
			}
			set
			{
				if ((this._LiveVillageName != value))
				{
					this.OnLiveVillageNameChanging(value);
					this.SendPropertyChanging();
					this._LiveVillageName = value;
					this.SendPropertyChanged("LiveVillageName");
					this.OnLiveVillageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveAlley", DbType="VarChar(MAX)")]
		public string LiveAlley
		{
			get
			{
				return this._LiveAlley;
			}
			set
			{
				if ((this._LiveAlley != value))
				{
					this.OnLiveAlleyChanging(value);
					this.SendPropertyChanging();
					this._LiveAlley = value;
					this.SendPropertyChanged("LiveAlley");
					this.OnLiveAlleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStreetName", DbType="VarChar(MAX)")]
		public string LiveStreetName
		{
			get
			{
				return this._LiveStreetName;
			}
			set
			{
				if ((this._LiveStreetName != value))
				{
					this.OnLiveStreetNameChanging(value);
					this.SendPropertyChanging();
					this._LiveStreetName = value;
					this.SendPropertyChanged("LiveStreetName");
					this.OnLiveStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveTumbon", DbType="VarChar(10)")]
		public string LiveTumbon
		{
			get
			{
				return this._LiveTumbon;
			}
			set
			{
				if ((this._LiveTumbon != value))
				{
					this.OnLiveTumbonChanging(value);
					this.SendPropertyChanging();
					this._LiveTumbon = value;
					this.SendPropertyChanged("LiveTumbon");
					this.OnLiveTumbonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveCity", DbType="VarChar(10)")]
		public string LiveCity
		{
			get
			{
				return this._LiveCity;
			}
			set
			{
				if ((this._LiveCity != value))
				{
					this.OnLiveCityChanging(value);
					this.SendPropertyChanging();
					this._LiveCity = value;
					this.SendPropertyChanged("LiveCity");
					this.OnLiveCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveProvince", DbType="VarChar(10)")]
		public string LiveProvince
		{
			get
			{
				return this._LiveProvince;
			}
			set
			{
				if ((this._LiveProvince != value))
				{
					this.OnLiveProvinceChanging(value);
					this.SendPropertyChanging();
					this._LiveProvince = value;
					this.SendPropertyChanged("LiveProvince");
					this.OnLiveProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivePostCode", DbType="VarChar(5)")]
		public string LivePostCode
		{
			get
			{
				return this._LivePostCode;
			}
			set
			{
				if ((this._LivePostCode != value))
				{
					this.OnLivePostCodeChanging(value);
					this.SendPropertyChanging();
					this._LivePostCode = value;
					this.SendPropertyChanged("LivePostCode");
					this.OnLivePostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LiveMoveInDate
		{
			get
			{
				return this._LiveMoveInDate;
			}
			set
			{
				if ((this._LiveMoveInDate != value))
				{
					this.OnLiveMoveInDateChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveInDate = value;
					this.SendPropertyChanged("LiveMoveInDate");
					this.OnLiveMoveInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LiveMoveOutDate
		{
			get
			{
				return this._LiveMoveOutDate;
			}
			set
			{
				if ((this._LiveMoveOutDate != value))
				{
					this.OnLiveMoveOutDateChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveOutDate = value;
					this.SendPropertyChanged("LiveMoveOutDate");
					this.OnLiveMoveOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveOutReason", DbType="VarChar(MAX)")]
		public string LiveMoveOutReason
		{
			get
			{
				return this._LiveMoveOutReason;
			}
			set
			{
				if ((this._LiveMoveOutReason != value))
				{
					this.OnLiveMoveOutReasonChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveOutReason = value;
					this.SendPropertyChanged("LiveMoveOutReason");
					this.OnLiveMoveOutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusHouseNumber", DbType="VarChar(MAX)")]
		public string CensusHouseNumber
		{
			get
			{
				return this._CensusHouseNumber;
			}
			set
			{
				if ((this._CensusHouseNumber != value))
				{
					this.OnCensusHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._CensusHouseNumber = value;
					this.SendPropertyChanged("CensusHouseNumber");
					this.OnCensusHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMooNumber", DbType="VarChar(MAX)")]
		public string CensusMooNumber
		{
			get
			{
				return this._CensusMooNumber;
			}
			set
			{
				if ((this._CensusMooNumber != value))
				{
					this.OnCensusMooNumberChanging(value);
					this.SendPropertyChanging();
					this._CensusMooNumber = value;
					this.SendPropertyChanged("CensusMooNumber");
					this.OnCensusMooNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusVillageName", DbType="VarChar(MAX)")]
		public string CensusVillageName
		{
			get
			{
				return this._CensusVillageName;
			}
			set
			{
				if ((this._CensusVillageName != value))
				{
					this.OnCensusVillageNameChanging(value);
					this.SendPropertyChanging();
					this._CensusVillageName = value;
					this.SendPropertyChanged("CensusVillageName");
					this.OnCensusVillageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusAlley", DbType="VarChar(MAX)")]
		public string CensusAlley
		{
			get
			{
				return this._CensusAlley;
			}
			set
			{
				if ((this._CensusAlley != value))
				{
					this.OnCensusAlleyChanging(value);
					this.SendPropertyChanging();
					this._CensusAlley = value;
					this.SendPropertyChanged("CensusAlley");
					this.OnCensusAlleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusStreetName", DbType="VarChar(MAX)")]
		public string CensusStreetName
		{
			get
			{
				return this._CensusStreetName;
			}
			set
			{
				if ((this._CensusStreetName != value))
				{
					this.OnCensusStreetNameChanging(value);
					this.SendPropertyChanging();
					this._CensusStreetName = value;
					this.SendPropertyChanged("CensusStreetName");
					this.OnCensusStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusTumbon", DbType="VarChar(10)")]
		public string CensusTumbon
		{
			get
			{
				return this._CensusTumbon;
			}
			set
			{
				if ((this._CensusTumbon != value))
				{
					this.OnCensusTumbonChanging(value);
					this.SendPropertyChanging();
					this._CensusTumbon = value;
					this.SendPropertyChanged("CensusTumbon");
					this.OnCensusTumbonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusCity", DbType="VarChar(10)")]
		public string CensusCity
		{
			get
			{
				return this._CensusCity;
			}
			set
			{
				if ((this._CensusCity != value))
				{
					this.OnCensusCityChanging(value);
					this.SendPropertyChanging();
					this._CensusCity = value;
					this.SendPropertyChanged("CensusCity");
					this.OnCensusCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusProvince", DbType="VarChar(10)")]
		public string CensusProvince
		{
			get
			{
				return this._CensusProvince;
			}
			set
			{
				if ((this._CensusProvince != value))
				{
					this.OnCensusProvinceChanging(value);
					this.SendPropertyChanging();
					this._CensusProvince = value;
					this.SendPropertyChanged("CensusProvince");
					this.OnCensusProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusPostCode", DbType="VarChar(5)")]
		public string CensusPostCode
		{
			get
			{
				return this._CensusPostCode;
			}
			set
			{
				if ((this._CensusPostCode != value))
				{
					this.OnCensusPostCodeChanging(value);
					this.SendPropertyChanging();
					this._CensusPostCode = value;
					this.SendPropertyChanged("CensusPostCode");
					this.OnCensusPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CensusMoveInDate
		{
			get
			{
				return this._CensusMoveInDate;
			}
			set
			{
				if ((this._CensusMoveInDate != value))
				{
					this.OnCensusMoveInDateChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveInDate = value;
					this.SendPropertyChanged("CensusMoveInDate");
					this.OnCensusMoveInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CensusMoveOutDate
		{
			get
			{
				return this._CensusMoveOutDate;
			}
			set
			{
				if ((this._CensusMoveOutDate != value))
				{
					this.OnCensusMoveOutDateChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveOutDate = value;
					this.SendPropertyChanged("CensusMoveOutDate");
					this.OnCensusMoveOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveOutReason", DbType="VarChar(MAX)")]
		public string CensusMoveOutReason
		{
			get
			{
				return this._CensusMoveOutReason;
			}
			set
			{
				if ((this._CensusMoveOutReason != value))
				{
					this.OnCensusMoveOutReasonChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveOutReason = value;
					this.SendPropertyChanged("CensusMoveOutReason");
					this.OnCensusMoveOutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarerStatus", DbType="VarChar(1)")]
		public string CarerStatus
		{
			get
			{
				return this._CarerStatus;
			}
			set
			{
				if ((this._CarerStatus != value))
				{
					this.OnCarerStatusChanging(value);
					this.SendPropertyChanging();
					this._CarerStatus = value;
					this.SendPropertyChanged("CarerStatus");
					this.OnCarerStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Foreigner")]
	public partial class Foreigner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ForeignTypeID;
		
		private string _ForeignTypeDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForeignTypeIDChanging(string value);
    partial void OnForeignTypeIDChanged();
    partial void OnForeignTypeDescriptionChanging(string value);
    partial void OnForeignTypeDescriptionChanged();
    #endregion
		
		public Foreigner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignTypeID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ForeignTypeID
		{
			get
			{
				return this._ForeignTypeID;
			}
			set
			{
				if ((this._ForeignTypeID != value))
				{
					this.OnForeignTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ForeignTypeID = value;
					this.SendPropertyChanged("ForeignTypeID");
					this.OnForeignTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignTypeDescription", DbType="VarChar(MAX)")]
		public string ForeignTypeDescription
		{
			get
			{
				return this._ForeignTypeDescription;
			}
			set
			{
				if ((this._ForeignTypeDescription != value))
				{
					this.OnForeignTypeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ForeignTypeDescription = value;
					this.SendPropertyChanged("ForeignTypeDescription");
					this.OnForeignTypeDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GenderCode;
		
		private string _GenderThaiDescription;
		
		private string _GenderEnglishDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenderCodeChanging(string value);
    partial void OnGenderCodeChanged();
    partial void OnGenderThaiDescriptionChanging(string value);
    partial void OnGenderThaiDescriptionChanged();
    partial void OnGenderEnglishDescriptionChanging(string value);
    partial void OnGenderEnglishDescriptionChanged();
    #endregion
		
		public Gender()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderCode", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GenderCode
		{
			get
			{
				return this._GenderCode;
			}
			set
			{
				if ((this._GenderCode != value))
				{
					this.OnGenderCodeChanging(value);
					this.SendPropertyChanging();
					this._GenderCode = value;
					this.SendPropertyChanged("GenderCode");
					this.OnGenderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderThaiDescription", DbType="VarChar(MAX)")]
		public string GenderThaiDescription
		{
			get
			{
				return this._GenderThaiDescription;
			}
			set
			{
				if ((this._GenderThaiDescription != value))
				{
					this.OnGenderThaiDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GenderThaiDescription = value;
					this.SendPropertyChanged("GenderThaiDescription");
					this.OnGenderThaiDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderEnglishDescription", DbType="VarChar(MAX)")]
		public string GenderEnglishDescription
		{
			get
			{
				return this._GenderEnglishDescription;
			}
			set
			{
				if ((this._GenderEnglishDescription != value))
				{
					this.OnGenderEnglishDescriptionChanging(value);
					this.SendPropertyChanging();
					this._GenderEnglishDescription = value;
					this.SendPropertyChanged("GenderEnglishDescription");
					this.OnGenderEnglishDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Havetype")]
	public partial class Havetype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HaveID;
		
		private string _HaveDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHaveIDChanging(string value);
    partial void OnHaveIDChanged();
    partial void OnHaveDescriptionChanging(string value);
    partial void OnHaveDescriptionChanged();
    #endregion
		
		public Havetype()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveID", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HaveID
		{
			get
			{
				return this._HaveID;
			}
			set
			{
				if ((this._HaveID != value))
				{
					this.OnHaveIDChanging(value);
					this.SendPropertyChanging();
					this._HaveID = value;
					this.SendPropertyChanged("HaveID");
					this.OnHaveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveDescription", DbType="VarChar(20)")]
		public string HaveDescription
		{
			get
			{
				return this._HaveDescription;
			}
			set
			{
				if ((this._HaveDescription != value))
				{
					this.OnHaveDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HaveDescription = value;
					this.SendPropertyChanged("HaveDescription");
					this.OnHaveDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HealthServiceType")]
	public partial class HealthServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _HSCHealthServiceID;
		
		private string _HealthServiceDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHSCHealthServiceIDChanging(char value);
    partial void OnHSCHealthServiceIDChanged();
    partial void OnHealthServiceDescriptionChanging(string value);
    partial void OnHealthServiceDescriptionChanged();
    #endregion
		
		public HealthServiceType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSCHealthServiceID", DbType="Char(1) NOT NULL", IsPrimaryKey=true)]
		public char HSCHealthServiceID
		{
			get
			{
				return this._HSCHealthServiceID;
			}
			set
			{
				if ((this._HSCHealthServiceID != value))
				{
					this.OnHSCHealthServiceIDChanging(value);
					this.SendPropertyChanging();
					this._HSCHealthServiceID = value;
					this.SendPropertyChanged("HSCHealthServiceID");
					this.OnHSCHealthServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthServiceDescription", DbType="VarChar(MAX)")]
		public string HealthServiceDescription
		{
			get
			{
				return this._HealthServiceDescription;
			}
			set
			{
				if ((this._HealthServiceDescription != value))
				{
					this.OnHealthServiceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HealthServiceDescription = value;
					this.SendPropertyChanged("HealthServiceDescription");
					this.OnHealthServiceDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hometype")]
	public partial class Hometype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HomeID;
		
		private string _HomeDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHomeIDChanging(string value);
    partial void OnHomeIDChanged();
    partial void OnHomeDescriptionChanging(string value);
    partial void OnHomeDescriptionChanged();
    #endregion
		
		public Hometype()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HomeID
		{
			get
			{
				return this._HomeID;
			}
			set
			{
				if ((this._HomeID != value))
				{
					this.OnHomeIDChanging(value);
					this.SendPropertyChanging();
					this._HomeID = value;
					this.SendPropertyChanged("HomeID");
					this.OnHomeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeDescription", DbType="VarChar(MAX)")]
		public string HomeDescription
		{
			get
			{
				return this._HomeDescription;
			}
			set
			{
				if ((this._HomeDescription != value))
				{
					this.OnHomeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HomeDescription = value;
					this.SendPropertyChanged("HomeDescription");
					this.OnHomeDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalCoordinates")]
	public partial class HospitalCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HospitalCode;
		
		private string _HospitalName;
		
		private string _HospitalAddress;
		
		private string _Latitude;
		
		private string _Longitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHospitalCodeChanging(string value);
    partial void OnHospitalCodeChanged();
    partial void OnHospitalNameChanging(string value);
    partial void OnHospitalNameChanged();
    partial void OnHospitalAddressChanging(string value);
    partial void OnHospitalAddressChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public HospitalCoordinate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalCode", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HospitalCode
		{
			get
			{
				return this._HospitalCode;
			}
			set
			{
				if ((this._HospitalCode != value))
				{
					this.OnHospitalCodeChanging(value);
					this.SendPropertyChanging();
					this._HospitalCode = value;
					this.SendPropertyChanged("HospitalCode");
					this.OnHospitalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalName", DbType="VarChar(MAX)")]
		public string HospitalName
		{
			get
			{
				return this._HospitalName;
			}
			set
			{
				if ((this._HospitalName != value))
				{
					this.OnHospitalNameChanging(value);
					this.SendPropertyChanging();
					this._HospitalName = value;
					this.SendPropertyChanged("HospitalName");
					this.OnHospitalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalAddress", DbType="VarChar(MAX)")]
		public string HospitalAddress
		{
			get
			{
				return this._HospitalAddress;
			}
			set
			{
				if ((this._HospitalAddress != value))
				{
					this.OnHospitalAddressChanging(value);
					this.SendPropertyChanging();
					this._HospitalAddress = value;
					this.SendPropertyChanged("HospitalAddress");
					this.OnHospitalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(MAX)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(MAX)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.House")]
	public partial class House : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _HouseLocation;
		
		private string _HouseVillageID;
		
		private string _HouseOwnerStatus;
		
		private string _HouseDurable;
		
		private string _Hometype;
		
		private string _WaterResource;
		
		private string _WaterQuality;
		
		private string _Garbage;
		
		private string _Clean;
		
		private string _Toilet;
		
		private string _Light;
		
		private string _Ventila;
		
		private string _WasteWater;
		
		private string _StreetToHouse;
		
		private string _PublicTransport;
		
		private string _NumberCooker;
		
		private string _NumberMicrowave;
		
		private string _NumberElectrickettle;
		
		private string _NumberRefrigerator;
		
		private string _Numberfan;
		
		private string _NumberRadio;
		
		private string _NumberIron;
		
		private string _NumberTelevision;
		
		private string _NumberWasher;
		
		private string _NumberComputer;
		
		private string _NumberHomephon;
		
		private string _NumberMobile;
		
		private string _NumberBicycle;
		
		private string _NumberMotorcycle;
		
		private string _NumberCar;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnHouseLocationChanging(string value);
    partial void OnHouseLocationChanged();
    partial void OnHouseVillageIDChanging(string value);
    partial void OnHouseVillageIDChanged();
    partial void OnHouseOwnerStatusChanging(string value);
    partial void OnHouseOwnerStatusChanged();
    partial void OnHouseDurableChanging(string value);
    partial void OnHouseDurableChanged();
    partial void OnHometypeChanging(string value);
    partial void OnHometypeChanged();
    partial void OnWaterResourceChanging(string value);
    partial void OnWaterResourceChanged();
    partial void OnWaterQualityChanging(string value);
    partial void OnWaterQualityChanged();
    partial void OnGarbageChanging(string value);
    partial void OnGarbageChanged();
    partial void OnCleanChanging(string value);
    partial void OnCleanChanged();
    partial void OnToiletChanging(string value);
    partial void OnToiletChanged();
    partial void OnLightChanging(string value);
    partial void OnLightChanged();
    partial void OnVentilaChanging(string value);
    partial void OnVentilaChanged();
    partial void OnWasteWaterChanging(string value);
    partial void OnWasteWaterChanged();
    partial void OnStreetToHouseChanging(string value);
    partial void OnStreetToHouseChanged();
    partial void OnPublicTransportChanging(string value);
    partial void OnPublicTransportChanged();
    partial void OnNumberCookerChanging(string value);
    partial void OnNumberCookerChanged();
    partial void OnNumberMicrowaveChanging(string value);
    partial void OnNumberMicrowaveChanged();
    partial void OnNumberElectrickettleChanging(string value);
    partial void OnNumberElectrickettleChanged();
    partial void OnNumberRefrigeratorChanging(string value);
    partial void OnNumberRefrigeratorChanged();
    partial void OnNumberfanChanging(string value);
    partial void OnNumberfanChanged();
    partial void OnNumberRadioChanging(string value);
    partial void OnNumberRadioChanged();
    partial void OnNumberIronChanging(string value);
    partial void OnNumberIronChanged();
    partial void OnNumberTelevisionChanging(string value);
    partial void OnNumberTelevisionChanged();
    partial void OnNumberWasherChanging(string value);
    partial void OnNumberWasherChanged();
    partial void OnNumberComputerChanging(string value);
    partial void OnNumberComputerChanged();
    partial void OnNumberHomephonChanging(string value);
    partial void OnNumberHomephonChanged();
    partial void OnNumberMobileChanging(string value);
    partial void OnNumberMobileChanged();
    partial void OnNumberBicycleChanging(string value);
    partial void OnNumberBicycleChanged();
    partial void OnNumberMotorcycleChanging(string value);
    partial void OnNumberMotorcycleChanged();
    partial void OnNumberCarChanging(string value);
    partial void OnNumberCarChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public House()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Char(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseLocation", DbType="VarChar(MAX)")]
		public string HouseLocation
		{
			get
			{
				return this._HouseLocation;
			}
			set
			{
				if ((this._HouseLocation != value))
				{
					this.OnHouseLocationChanging(value);
					this.SendPropertyChanging();
					this._HouseLocation = value;
					this.SendPropertyChanged("HouseLocation");
					this.OnHouseLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseVillageID", DbType="VarChar(MAX)")]
		public string HouseVillageID
		{
			get
			{
				return this._HouseVillageID;
			}
			set
			{
				if ((this._HouseVillageID != value))
				{
					this.OnHouseVillageIDChanging(value);
					this.SendPropertyChanging();
					this._HouseVillageID = value;
					this.SendPropertyChanged("HouseVillageID");
					this.OnHouseVillageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseOwnerStatus", DbType="VarChar(MAX)")]
		public string HouseOwnerStatus
		{
			get
			{
				return this._HouseOwnerStatus;
			}
			set
			{
				if ((this._HouseOwnerStatus != value))
				{
					this.OnHouseOwnerStatusChanging(value);
					this.SendPropertyChanging();
					this._HouseOwnerStatus = value;
					this.SendPropertyChanged("HouseOwnerStatus");
					this.OnHouseOwnerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseDurable", DbType="VarChar(MAX)")]
		public string HouseDurable
		{
			get
			{
				return this._HouseDurable;
			}
			set
			{
				if ((this._HouseDurable != value))
				{
					this.OnHouseDurableChanging(value);
					this.SendPropertyChanging();
					this._HouseDurable = value;
					this.SendPropertyChanged("HouseDurable");
					this.OnHouseDurableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometype", DbType="VarChar(MAX)")]
		public string Hometype
		{
			get
			{
				return this._Hometype;
			}
			set
			{
				if ((this._Hometype != value))
				{
					this.OnHometypeChanging(value);
					this.SendPropertyChanging();
					this._Hometype = value;
					this.SendPropertyChanged("Hometype");
					this.OnHometypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterResource", DbType="VarChar(MAX)")]
		public string WaterResource
		{
			get
			{
				return this._WaterResource;
			}
			set
			{
				if ((this._WaterResource != value))
				{
					this.OnWaterResourceChanging(value);
					this.SendPropertyChanging();
					this._WaterResource = value;
					this.SendPropertyChanged("WaterResource");
					this.OnWaterResourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterQuality", DbType="VarChar(MAX)")]
		public string WaterQuality
		{
			get
			{
				return this._WaterQuality;
			}
			set
			{
				if ((this._WaterQuality != value))
				{
					this.OnWaterQualityChanging(value);
					this.SendPropertyChanging();
					this._WaterQuality = value;
					this.SendPropertyChanged("WaterQuality");
					this.OnWaterQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Garbage", DbType="VarChar(MAX)")]
		public string Garbage
		{
			get
			{
				return this._Garbage;
			}
			set
			{
				if ((this._Garbage != value))
				{
					this.OnGarbageChanging(value);
					this.SendPropertyChanging();
					this._Garbage = value;
					this.SendPropertyChanged("Garbage");
					this.OnGarbageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clean", DbType="VarChar(MAX)")]
		public string Clean
		{
			get
			{
				return this._Clean;
			}
			set
			{
				if ((this._Clean != value))
				{
					this.OnCleanChanging(value);
					this.SendPropertyChanging();
					this._Clean = value;
					this.SendPropertyChanged("Clean");
					this.OnCleanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Toilet", DbType="VarChar(MAX)")]
		public string Toilet
		{
			get
			{
				return this._Toilet;
			}
			set
			{
				if ((this._Toilet != value))
				{
					this.OnToiletChanging(value);
					this.SendPropertyChanging();
					this._Toilet = value;
					this.SendPropertyChanged("Toilet");
					this.OnToiletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Light", DbType="VarChar(MAX)")]
		public string Light
		{
			get
			{
				return this._Light;
			}
			set
			{
				if ((this._Light != value))
				{
					this.OnLightChanging(value);
					this.SendPropertyChanging();
					this._Light = value;
					this.SendPropertyChanged("Light");
					this.OnLightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ventila", DbType="VarChar(MAX)")]
		public string Ventila
		{
			get
			{
				return this._Ventila;
			}
			set
			{
				if ((this._Ventila != value))
				{
					this.OnVentilaChanging(value);
					this.SendPropertyChanging();
					this._Ventila = value;
					this.SendPropertyChanged("Ventila");
					this.OnVentilaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasteWater", DbType="VarChar(MAX)")]
		public string WasteWater
		{
			get
			{
				return this._WasteWater;
			}
			set
			{
				if ((this._WasteWater != value))
				{
					this.OnWasteWaterChanging(value);
					this.SendPropertyChanging();
					this._WasteWater = value;
					this.SendPropertyChanged("WasteWater");
					this.OnWasteWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetToHouse", DbType="VarChar(MAX)")]
		public string StreetToHouse
		{
			get
			{
				return this._StreetToHouse;
			}
			set
			{
				if ((this._StreetToHouse != value))
				{
					this.OnStreetToHouseChanging(value);
					this.SendPropertyChanging();
					this._StreetToHouse = value;
					this.SendPropertyChanged("StreetToHouse");
					this.OnStreetToHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicTransport", DbType="VarChar(MAX)")]
		public string PublicTransport
		{
			get
			{
				return this._PublicTransport;
			}
			set
			{
				if ((this._PublicTransport != value))
				{
					this.OnPublicTransportChanging(value);
					this.SendPropertyChanging();
					this._PublicTransport = value;
					this.SendPropertyChanged("PublicTransport");
					this.OnPublicTransportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberCooker", DbType="VarChar(MAX)")]
		public string NumberCooker
		{
			get
			{
				return this._NumberCooker;
			}
			set
			{
				if ((this._NumberCooker != value))
				{
					this.OnNumberCookerChanging(value);
					this.SendPropertyChanging();
					this._NumberCooker = value;
					this.SendPropertyChanged("NumberCooker");
					this.OnNumberCookerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberMicrowave", DbType="VarChar(MAX)")]
		public string NumberMicrowave
		{
			get
			{
				return this._NumberMicrowave;
			}
			set
			{
				if ((this._NumberMicrowave != value))
				{
					this.OnNumberMicrowaveChanging(value);
					this.SendPropertyChanging();
					this._NumberMicrowave = value;
					this.SendPropertyChanged("NumberMicrowave");
					this.OnNumberMicrowaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberElectrickettle", DbType="VarChar(MAX)")]
		public string NumberElectrickettle
		{
			get
			{
				return this._NumberElectrickettle;
			}
			set
			{
				if ((this._NumberElectrickettle != value))
				{
					this.OnNumberElectrickettleChanging(value);
					this.SendPropertyChanging();
					this._NumberElectrickettle = value;
					this.SendPropertyChanged("NumberElectrickettle");
					this.OnNumberElectrickettleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberRefrigerator", DbType="VarChar(MAX)")]
		public string NumberRefrigerator
		{
			get
			{
				return this._NumberRefrigerator;
			}
			set
			{
				if ((this._NumberRefrigerator != value))
				{
					this.OnNumberRefrigeratorChanging(value);
					this.SendPropertyChanging();
					this._NumberRefrigerator = value;
					this.SendPropertyChanged("NumberRefrigerator");
					this.OnNumberRefrigeratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numberfan", DbType="VarChar(MAX)")]
		public string Numberfan
		{
			get
			{
				return this._Numberfan;
			}
			set
			{
				if ((this._Numberfan != value))
				{
					this.OnNumberfanChanging(value);
					this.SendPropertyChanging();
					this._Numberfan = value;
					this.SendPropertyChanged("Numberfan");
					this.OnNumberfanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberRadio", DbType="VarChar(MAX)")]
		public string NumberRadio
		{
			get
			{
				return this._NumberRadio;
			}
			set
			{
				if ((this._NumberRadio != value))
				{
					this.OnNumberRadioChanging(value);
					this.SendPropertyChanging();
					this._NumberRadio = value;
					this.SendPropertyChanged("NumberRadio");
					this.OnNumberRadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberIron", DbType="VarChar(MAX)")]
		public string NumberIron
		{
			get
			{
				return this._NumberIron;
			}
			set
			{
				if ((this._NumberIron != value))
				{
					this.OnNumberIronChanging(value);
					this.SendPropertyChanging();
					this._NumberIron = value;
					this.SendPropertyChanged("NumberIron");
					this.OnNumberIronChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTelevision", DbType="VarChar(MAX)")]
		public string NumberTelevision
		{
			get
			{
				return this._NumberTelevision;
			}
			set
			{
				if ((this._NumberTelevision != value))
				{
					this.OnNumberTelevisionChanging(value);
					this.SendPropertyChanging();
					this._NumberTelevision = value;
					this.SendPropertyChanged("NumberTelevision");
					this.OnNumberTelevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberWasher", DbType="VarChar(MAX)")]
		public string NumberWasher
		{
			get
			{
				return this._NumberWasher;
			}
			set
			{
				if ((this._NumberWasher != value))
				{
					this.OnNumberWasherChanging(value);
					this.SendPropertyChanging();
					this._NumberWasher = value;
					this.SendPropertyChanged("NumberWasher");
					this.OnNumberWasherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberComputer", DbType="VarChar(MAX)")]
		public string NumberComputer
		{
			get
			{
				return this._NumberComputer;
			}
			set
			{
				if ((this._NumberComputer != value))
				{
					this.OnNumberComputerChanging(value);
					this.SendPropertyChanging();
					this._NumberComputer = value;
					this.SendPropertyChanged("NumberComputer");
					this.OnNumberComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberHomephon", DbType="VarChar(MAX)")]
		public string NumberHomephon
		{
			get
			{
				return this._NumberHomephon;
			}
			set
			{
				if ((this._NumberHomephon != value))
				{
					this.OnNumberHomephonChanging(value);
					this.SendPropertyChanging();
					this._NumberHomephon = value;
					this.SendPropertyChanged("NumberHomephon");
					this.OnNumberHomephonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberMobile", DbType="VarChar(MAX)")]
		public string NumberMobile
		{
			get
			{
				return this._NumberMobile;
			}
			set
			{
				if ((this._NumberMobile != value))
				{
					this.OnNumberMobileChanging(value);
					this.SendPropertyChanging();
					this._NumberMobile = value;
					this.SendPropertyChanged("NumberMobile");
					this.OnNumberMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBicycle", DbType="VarChar(MAX)")]
		public string NumberBicycle
		{
			get
			{
				return this._NumberBicycle;
			}
			set
			{
				if ((this._NumberBicycle != value))
				{
					this.OnNumberBicycleChanging(value);
					this.SendPropertyChanging();
					this._NumberBicycle = value;
					this.SendPropertyChanged("NumberBicycle");
					this.OnNumberBicycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberMotorcycle", DbType="VarChar(MAX)")]
		public string NumberMotorcycle
		{
			get
			{
				return this._NumberMotorcycle;
			}
			set
			{
				if ((this._NumberMotorcycle != value))
				{
					this.OnNumberMotorcycleChanging(value);
					this.SendPropertyChanging();
					this._NumberMotorcycle = value;
					this.SendPropertyChanged("NumberMotorcycle");
					this.OnNumberMotorcycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberCar", DbType="VarChar(MAX)")]
		public string NumberCar
		{
			get
			{
				return this._NumberCar;
			}
			set
			{
				if ((this._NumberCar != value))
				{
					this.OnNumberCarChanging(value);
					this.SendPropertyChanging();
					this._NumberCar = value;
					this.SendPropertyChanged("NumberCar");
					this.OnNumberCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HouseDurableType")]
	public partial class HouseDurableType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HouseDurableID;
		
		private string _HouseDurableDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHouseDurableIDChanging(string value);
    partial void OnHouseDurableIDChanged();
    partial void OnHouseDurableDescriptionChanging(string value);
    partial void OnHouseDurableDescriptionChanged();
    #endregion
		
		public HouseDurableType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseDurableID", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HouseDurableID
		{
			get
			{
				return this._HouseDurableID;
			}
			set
			{
				if ((this._HouseDurableID != value))
				{
					this.OnHouseDurableIDChanging(value);
					this.SendPropertyChanging();
					this._HouseDurableID = value;
					this.SendPropertyChanged("HouseDurableID");
					this.OnHouseDurableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseDurableDescription", DbType="VarChar(MAX)")]
		public string HouseDurableDescription
		{
			get
			{
				return this._HouseDurableDescription;
			}
			set
			{
				if ((this._HouseDurableDescription != value))
				{
					this.OnHouseDurableDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HouseDurableDescription = value;
					this.SendPropertyChanged("HouseDurableDescription");
					this.OnHouseDurableDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HouseLocationType")]
	public partial class HouseLocationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HouseLocationID;
		
		private string _HouseLocationDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHouseLocationIDChanging(string value);
    partial void OnHouseLocationIDChanged();
    partial void OnHouseLocationDescriptionChanging(string value);
    partial void OnHouseLocationDescriptionChanged();
    #endregion
		
		public HouseLocationType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseLocationID", DbType="VarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HouseLocationID
		{
			get
			{
				return this._HouseLocationID;
			}
			set
			{
				if ((this._HouseLocationID != value))
				{
					this.OnHouseLocationIDChanging(value);
					this.SendPropertyChanging();
					this._HouseLocationID = value;
					this.SendPropertyChanged("HouseLocationID");
					this.OnHouseLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseLocationDescription", DbType="VarChar(MAX)")]
		public string HouseLocationDescription
		{
			get
			{
				return this._HouseLocationDescription;
			}
			set
			{
				if ((this._HouseLocationDescription != value))
				{
					this.OnHouseLocationDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HouseLocationDescription = value;
					this.SendPropertyChanged("HouseLocationDescription");
					this.OnHouseLocationDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HouseOwnerStatusType")]
	public partial class HouseOwnerStatusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HouseOwnerStatusID;
		
		private string _HouseOwnerStatusDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHouseOwnerStatusIDChanging(string value);
    partial void OnHouseOwnerStatusIDChanged();
    partial void OnHouseOwnerStatusDescriptionChanging(string value);
    partial void OnHouseOwnerStatusDescriptionChanged();
    #endregion
		
		public HouseOwnerStatusType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseOwnerStatusID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HouseOwnerStatusID
		{
			get
			{
				return this._HouseOwnerStatusID;
			}
			set
			{
				if ((this._HouseOwnerStatusID != value))
				{
					this.OnHouseOwnerStatusIDChanging(value);
					this.SendPropertyChanging();
					this._HouseOwnerStatusID = value;
					this.SendPropertyChanged("HouseOwnerStatusID");
					this.OnHouseOwnerStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseOwnerStatusDescription", DbType="VarChar(MAX)")]
		public string HouseOwnerStatusDescription
		{
			get
			{
				return this._HouseOwnerStatusDescription;
			}
			set
			{
				if ((this._HouseOwnerStatusDescription != value))
				{
					this.OnHouseOwnerStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HouseOwnerStatusDescription = value;
					this.SendPropertyChanged("HouseOwnerStatusDescription");
					this.OnHouseOwnerStatusDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InsuranceType")]
	public partial class InsuranceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InsuranceID;
		
		private string _InsuranceDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInsuranceIDChanging(string value);
    partial void OnInsuranceIDChanged();
    partial void OnInsuranceDescriptionChanging(string value);
    partial void OnInsuranceDescriptionChanged();
    #endregion
		
		public InsuranceType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceID", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InsuranceID
		{
			get
			{
				return this._InsuranceID;
			}
			set
			{
				if ((this._InsuranceID != value))
				{
					this.OnInsuranceIDChanging(value);
					this.SendPropertyChanging();
					this._InsuranceID = value;
					this.SendPropertyChanged("InsuranceID");
					this.OnInsuranceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceDescription", DbType="Char(255)")]
		public string InsuranceDescription
		{
			get
			{
				return this._InsuranceDescription;
			}
			set
			{
				if ((this._InsuranceDescription != value))
				{
					this.OnInsuranceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._InsuranceDescription = value;
					this.SendPropertyChanged("InsuranceDescription");
					this.OnInsuranceDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LiveHomeStatus")]
	public partial class LiveHomeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LiveHomeStatusID;
		
		private string _LiveHomeStatusDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLiveHomeStatusIDChanging(string value);
    partial void OnLiveHomeStatusIDChanged();
    partial void OnLiveHomeStatusDescriptionChanging(string value);
    partial void OnLiveHomeStatusDescriptionChanged();
    #endregion
		
		public LiveHomeStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveHomeStatusID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LiveHomeStatusID
		{
			get
			{
				return this._LiveHomeStatusID;
			}
			set
			{
				if ((this._LiveHomeStatusID != value))
				{
					this.OnLiveHomeStatusIDChanging(value);
					this.SendPropertyChanging();
					this._LiveHomeStatusID = value;
					this.SendPropertyChanged("LiveHomeStatusID");
					this.OnLiveHomeStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveHomeStatusDescription", DbType="VarChar(MAX)")]
		public string LiveHomeStatusDescription
		{
			get
			{
				return this._LiveHomeStatusDescription;
			}
			set
			{
				if ((this._LiveHomeStatusDescription != value))
				{
					this.OnLiveHomeStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LiveHomeStatusDescription = value;
					this.SendPropertyChanged("LiveHomeStatusDescription");
					this.OnLiveHomeStatusDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LiveStatus")]
	public partial class LiveStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LiveStatusID;
		
		private string _LiveStatusDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLiveStatusIDChanging(string value);
    partial void OnLiveStatusIDChanged();
    partial void OnLiveStatusDescriptionChanging(string value);
    partial void OnLiveStatusDescriptionChanged();
    #endregion
		
		public LiveStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStatusID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LiveStatusID
		{
			get
			{
				return this._LiveStatusID;
			}
			set
			{
				if ((this._LiveStatusID != value))
				{
					this.OnLiveStatusIDChanging(value);
					this.SendPropertyChanging();
					this._LiveStatusID = value;
					this.SendPropertyChanged("LiveStatusID");
					this.OnLiveStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStatusDescription", DbType="VarChar(MAX)")]
		public string LiveStatusDescription
		{
			get
			{
				return this._LiveStatusDescription;
			}
			set
			{
				if ((this._LiveStatusDescription != value))
				{
					this.OnLiveStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LiveStatusDescription = value;
					this.SendPropertyChanged("LiveStatusDescription");
					this.OnLiveStatusDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocalAuthoritiesCoordinates")]
	public partial class LocalAuthoritiesCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LocalCode;
		
		private string _LocalAuthoritiesName;
		
		private string _LocalAuthoritiesPrefecture;
		
		private string _LocalAuthoritiesProvince;
		
		private string _Latitude;
		
		private string _Longitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocalCodeChanging(string value);
    partial void OnLocalCodeChanged();
    partial void OnLocalAuthoritiesNameChanging(string value);
    partial void OnLocalAuthoritiesNameChanged();
    partial void OnLocalAuthoritiesPrefectureChanging(string value);
    partial void OnLocalAuthoritiesPrefectureChanged();
    partial void OnLocalAuthoritiesProvinceChanging(string value);
    partial void OnLocalAuthoritiesProvinceChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public LocalAuthoritiesCoordinate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalCode", DbType="VarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LocalCode
		{
			get
			{
				return this._LocalCode;
			}
			set
			{
				if ((this._LocalCode != value))
				{
					this.OnLocalCodeChanging(value);
					this.SendPropertyChanging();
					this._LocalCode = value;
					this.SendPropertyChanged("LocalCode");
					this.OnLocalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalAuthoritiesName", DbType="VarChar(MAX)")]
		public string LocalAuthoritiesName
		{
			get
			{
				return this._LocalAuthoritiesName;
			}
			set
			{
				if ((this._LocalAuthoritiesName != value))
				{
					this.OnLocalAuthoritiesNameChanging(value);
					this.SendPropertyChanging();
					this._LocalAuthoritiesName = value;
					this.SendPropertyChanged("LocalAuthoritiesName");
					this.OnLocalAuthoritiesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalAuthoritiesPrefecture", DbType="VarChar(MAX)")]
		public string LocalAuthoritiesPrefecture
		{
			get
			{
				return this._LocalAuthoritiesPrefecture;
			}
			set
			{
				if ((this._LocalAuthoritiesPrefecture != value))
				{
					this.OnLocalAuthoritiesPrefectureChanging(value);
					this.SendPropertyChanging();
					this._LocalAuthoritiesPrefecture = value;
					this.SendPropertyChanged("LocalAuthoritiesPrefecture");
					this.OnLocalAuthoritiesPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalAuthoritiesProvince", DbType="VarChar(MAX)")]
		public string LocalAuthoritiesProvince
		{
			get
			{
				return this._LocalAuthoritiesProvince;
			}
			set
			{
				if ((this._LocalAuthoritiesProvince != value))
				{
					this.OnLocalAuthoritiesProvinceChanging(value);
					this.SendPropertyChanging();
					this._LocalAuthoritiesProvince = value;
					this.SendPropertyChanged("LocalAuthoritiesProvince");
					this.OnLocalAuthoritiesProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(MAX)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(MAX)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MariageStatus")]
	public partial class MariageStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MariageStatusID;
		
		private string _MariageStatusDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMariageStatusIDChanging(string value);
    partial void OnMariageStatusIDChanged();
    partial void OnMariageStatusDescriptionChanging(string value);
    partial void OnMariageStatusDescriptionChanged();
    #endregion
		
		public MariageStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MariageStatusID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MariageStatusID
		{
			get
			{
				return this._MariageStatusID;
			}
			set
			{
				if ((this._MariageStatusID != value))
				{
					this.OnMariageStatusIDChanging(value);
					this.SendPropertyChanging();
					this._MariageStatusID = value;
					this.SendPropertyChanged("MariageStatusID");
					this.OnMariageStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MariageStatusDescription", DbType="VarChar(MAX)")]
		public string MariageStatusDescription
		{
			get
			{
				return this._MariageStatusDescription;
			}
			set
			{
				if ((this._MariageStatusDescription != value))
				{
					this.OnMariageStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MariageStatusDescription = value;
					this.SendPropertyChanged("MariageStatusDescription");
					this.OnMariageStatusDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Material")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaterialCode;
		
		private string _MaterialDesc;
		
		private string _Unit;
		
		private string _EstimatedPrice;
		
		private string _RealPrice;
		
		private string _SVCCode;
		
		private string _Note;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnMaterialDescChanging(string value);
    partial void OnMaterialDescChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnEstimatedPriceChanging(string value);
    partial void OnEstimatedPriceChanged();
    partial void OnRealPriceChanging(string value);
    partial void OnRealPriceChanged();
    partial void OnSVCCodeChanging(string value);
    partial void OnSVCCodeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Material()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialDesc", DbType="Char(255)")]
		public string MaterialDesc
		{
			get
			{
				return this._MaterialDesc;
			}
			set
			{
				if ((this._MaterialDesc != value))
				{
					this.OnMaterialDescChanging(value);
					this.SendPropertyChanging();
					this._MaterialDesc = value;
					this.SendPropertyChanged("MaterialDesc");
					this.OnMaterialDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Char(255)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedPrice", DbType="Char(255)")]
		public string EstimatedPrice
		{
			get
			{
				return this._EstimatedPrice;
			}
			set
			{
				if ((this._EstimatedPrice != value))
				{
					this.OnEstimatedPriceChanging(value);
					this.SendPropertyChanging();
					this._EstimatedPrice = value;
					this.SendPropertyChanged("EstimatedPrice");
					this.OnEstimatedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPrice", DbType="Char(255)")]
		public string RealPrice
		{
			get
			{
				return this._RealPrice;
			}
			set
			{
				if ((this._RealPrice != value))
				{
					this.OnRealPriceChanging(value);
					this.SendPropertyChanging();
					this._RealPrice = value;
					this.SendPropertyChanged("RealPrice");
					this.OnRealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCCode", DbType="Char(255)")]
		public string SVCCode
		{
			get
			{
				return this._SVCCode;
			}
			set
			{
				if ((this._SVCCode != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSVCCodeChanging(value);
					this.SendPropertyChanging();
					this._SVCCode = value;
					this.SendPropertyChanged("SVCCode");
					this.OnSVCCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="Char(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Material", Storage="_Service", ThisKey="SVCCode", OtherKey="SVCCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._SVCCode = value.SVCCode;
					}
					else
					{
						this._SVCCode = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ministry")]
	public partial class Ministry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MinistryCode;
		
		private string _MinistryName;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMinistryCodeChanging(string value);
    partial void OnMinistryCodeChanged();
    partial void OnMinistryNameChanging(string value);
    partial void OnMinistryNameChanged();
    #endregion
		
		public Ministry()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MinistryCode
		{
			get
			{
				return this._MinistryCode;
			}
			set
			{
				if ((this._MinistryCode != value))
				{
					this.OnMinistryCodeChanging(value);
					this.SendPropertyChanging();
					this._MinistryCode = value;
					this.SendPropertyChanged("MinistryCode");
					this.OnMinistryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryName", DbType="Char(255)")]
		public string MinistryName
		{
			get
			{
				return this._MinistryName;
			}
			set
			{
				if ((this._MinistryName != value))
				{
					this.OnMinistryNameChanging(value);
					this.SendPropertyChanging();
					this._MinistryName = value;
					this.SendPropertyChanged("MinistryName");
					this.OnMinistryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_Organization", Storage="_Organizations", ThisKey="MinistryCode", OtherKey="MinistryCode")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Ministry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Occupation")]
	public partial class Occupation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OccupationID;
		
		private string _OccupationDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOccupationIDChanging(string value);
    partial void OnOccupationIDChanged();
    partial void OnOccupationDescriptionChanging(string value);
    partial void OnOccupationDescriptionChanged();
    #endregion
		
		public Occupation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OccupationID
		{
			get
			{
				return this._OccupationID;
			}
			set
			{
				if ((this._OccupationID != value))
				{
					this.OnOccupationIDChanging(value);
					this.SendPropertyChanging();
					this._OccupationID = value;
					this.SendPropertyChanged("OccupationID");
					this.OnOccupationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationDescription", DbType="VarChar(MAX)")]
		public string OccupationDescription
		{
			get
			{
				return this._OccupationDescription;
			}
			set
			{
				if ((this._OccupationDescription != value))
				{
					this.OnOccupationDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OccupationDescription = value;
					this.SendPropertyChanged("OccupationDescription");
					this.OnOccupationDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrgCode;
		
		private string _OrgName;
		
		private string _MinistryCode;
		
		private EntitySet<Provider> _Providers;
		
		private EntityRef<Ministry> _Ministry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnOrgNameChanging(string value);
    partial void OnOrgNameChanged();
    partial void OnMinistryCodeChanging(string value);
    partial void OnMinistryCodeChanged();
    #endregion
		
		public Organization()
		{
			this._Providers = new EntitySet<Provider>(new Action<Provider>(this.attach_Providers), new Action<Provider>(this.detach_Providers));
			this._Ministry = default(EntityRef<Ministry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="Char(255)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this.OnOrgNameChanging(value);
					this.SendPropertyChanging();
					this._OrgName = value;
					this.SendPropertyChanged("OrgName");
					this.OnOrgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinistryCode", DbType="Char(255)")]
		public string MinistryCode
		{
			get
			{
				return this._MinistryCode;
			}
			set
			{
				if ((this._MinistryCode != value))
				{
					if (this._Ministry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMinistryCodeChanging(value);
					this.SendPropertyChanging();
					this._MinistryCode = value;
					this.SendPropertyChanged("MinistryCode");
					this.OnMinistryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Provider", Storage="_Providers", ThisKey="OrgCode", OtherKey="OrgCode")]
		public EntitySet<Provider> Providers
		{
			get
			{
				return this._Providers;
			}
			set
			{
				this._Providers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ministry_Organization", Storage="_Ministry", ThisKey="MinistryCode", OtherKey="MinistryCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Ministry Ministry
		{
			get
			{
				return this._Ministry.Entity;
			}
			set
			{
				Ministry previousValue = this._Ministry.Entity;
				if (((previousValue != value) 
							|| (this._Ministry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ministry.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._Ministry.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._MinistryCode = value.MinistryCode;
					}
					else
					{
						this._MinistryCode = default(string);
					}
					this.SendPropertyChanged("Ministry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Providers(Provider entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_Providers(Provider entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartForEvaluation")]
	public partial class PartForEvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EvaluationID;
		
		private string _EvaluationType;
		
		private string _EvaluationDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvaluationIDChanging(string value);
    partial void OnEvaluationIDChanged();
    partial void OnEvaluationTypeChanging(string value);
    partial void OnEvaluationTypeChanged();
    partial void OnEvaluationDescriptionChanging(string value);
    partial void OnEvaluationDescriptionChanged();
    #endregion
		
		public PartForEvaluation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EvaluationID
		{
			get
			{
				return this._EvaluationID;
			}
			set
			{
				if ((this._EvaluationID != value))
				{
					this.OnEvaluationIDChanging(value);
					this.SendPropertyChanging();
					this._EvaluationID = value;
					this.SendPropertyChanged("EvaluationID");
					this.OnEvaluationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationType", DbType="VarChar(2)")]
		public string EvaluationType
		{
			get
			{
				return this._EvaluationType;
			}
			set
			{
				if ((this._EvaluationType != value))
				{
					this.OnEvaluationTypeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationType = value;
					this.SendPropertyChanged("EvaluationType");
					this.OnEvaluationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationDescription", DbType="VarChar(MAX)")]
		public string EvaluationDescription
		{
			get
			{
				return this._EvaluationDescription;
			}
			set
			{
				if ((this._EvaluationDescription != value))
				{
					this.OnEvaluationDescriptionChanging(value);
					this.SendPropertyChanging();
					this._EvaluationDescription = value;
					this.SendPropertyChanged("EvaluationDescription");
					this.OnEvaluationDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _Title;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Gender;
		
		private string _Bloodtype;
		
		private string _Nation;
		
		private string _Race;
		
		private string _Religion;
		
		private System.Nullable<double> _WeightPerson;
		
		private System.Nullable<double> _HeightPerson;
		
		private string _SubWelfareID;
		
		private string _Foreigner;
		
		private string _LiveHomeStatus;
		
		private string _LiveHouseNumber;
		
		private string _LiveMooNumber;
		
		private string _LiveVillageName;
		
		private string _LiveAlley;
		
		private string _LiveStreetName;
		
		private string _LiveTumbon;
		
		private string _LiveCity;
		
		private string _LiveProvince;
		
		private string _LivePostCode;
		
		private System.Nullable<System.DateTime> _LiveMoveInDate;
		
		private System.Nullable<System.DateTime> _LiveMoveOutDate;
		
		private string _LiveMoveOutReason;
		
		private string _CensusHouseNumber;
		
		private string _CensusMooNumber;
		
		private string _CensusVillageName;
		
		private string _CensusAlley;
		
		private string _CensusStreetName;
		
		private string _CensusTumbon;
		
		private string _CensusCity;
		
		private string _CensusProvince;
		
		private string _CensusPostCode;
		
		private System.Nullable<System.DateTime> _CensusMoveInDate;
		
		private System.Nullable<System.DateTime> _CensusMoveOutDate;
		
		private string _CensusMoveOutReason;
		
		private string _HomePhone;
		
		private string _Mobile;
		
		private string _RecordStaffID;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
		private EntitySet<Family> _Families;
		
		private EntityRef<TravelGotoHostpital> _TravelGotoHostpital;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnBloodtypeChanging(string value);
    partial void OnBloodtypeChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnWeightPersonChanging(System.Nullable<double> value);
    partial void OnWeightPersonChanged();
    partial void OnHeightPersonChanging(System.Nullable<double> value);
    partial void OnHeightPersonChanged();
    partial void OnSubWelfareIDChanging(string value);
    partial void OnSubWelfareIDChanged();
    partial void OnForeignerChanging(string value);
    partial void OnForeignerChanged();
    partial void OnLiveHomeStatusChanging(string value);
    partial void OnLiveHomeStatusChanged();
    partial void OnLiveHouseNumberChanging(string value);
    partial void OnLiveHouseNumberChanged();
    partial void OnLiveMooNumberChanging(string value);
    partial void OnLiveMooNumberChanged();
    partial void OnLiveVillageNameChanging(string value);
    partial void OnLiveVillageNameChanged();
    partial void OnLiveAlleyChanging(string value);
    partial void OnLiveAlleyChanged();
    partial void OnLiveStreetNameChanging(string value);
    partial void OnLiveStreetNameChanged();
    partial void OnLiveTumbonChanging(string value);
    partial void OnLiveTumbonChanged();
    partial void OnLiveCityChanging(string value);
    partial void OnLiveCityChanged();
    partial void OnLiveProvinceChanging(string value);
    partial void OnLiveProvinceChanged();
    partial void OnLivePostCodeChanging(string value);
    partial void OnLivePostCodeChanged();
    partial void OnLiveMoveInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLiveMoveInDateChanged();
    partial void OnLiveMoveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLiveMoveOutDateChanged();
    partial void OnLiveMoveOutReasonChanging(string value);
    partial void OnLiveMoveOutReasonChanged();
    partial void OnCensusHouseNumberChanging(string value);
    partial void OnCensusHouseNumberChanged();
    partial void OnCensusMooNumberChanging(string value);
    partial void OnCensusMooNumberChanged();
    partial void OnCensusVillageNameChanging(string value);
    partial void OnCensusVillageNameChanged();
    partial void OnCensusAlleyChanging(string value);
    partial void OnCensusAlleyChanged();
    partial void OnCensusStreetNameChanging(string value);
    partial void OnCensusStreetNameChanged();
    partial void OnCensusTumbonChanging(string value);
    partial void OnCensusTumbonChanged();
    partial void OnCensusCityChanging(string value);
    partial void OnCensusCityChanged();
    partial void OnCensusProvinceChanging(string value);
    partial void OnCensusProvinceChanged();
    partial void OnCensusPostCodeChanging(string value);
    partial void OnCensusPostCodeChanged();
    partial void OnCensusMoveInDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCensusMoveInDateChanged();
    partial void OnCensusMoveOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCensusMoveOutDateChanged();
    partial void OnCensusMoveOutReasonChanging(string value);
    partial void OnCensusMoveOutReasonChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnRecordStaffIDChanging(string value);
    partial void OnRecordStaffIDChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public Person()
		{
			this._Families = new EntitySet<Family>(new Action<Family>(this.attach_Families), new Action<Family>(this.detach_Families));
			this._TravelGotoHostpital = default(EntityRef<TravelGotoHostpital>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(2)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(2)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bloodtype", DbType="VarChar(2)")]
		public string Bloodtype
		{
			get
			{
				return this._Bloodtype;
			}
			set
			{
				if ((this._Bloodtype != value))
				{
					this.OnBloodtypeChanging(value);
					this.SendPropertyChanging();
					this._Bloodtype = value;
					this.SendPropertyChanged("Bloodtype");
					this.OnBloodtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="VarChar(MAX)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="VarChar(MAX)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(MAX)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightPerson", DbType="Float")]
		public System.Nullable<double> WeightPerson
		{
			get
			{
				return this._WeightPerson;
			}
			set
			{
				if ((this._WeightPerson != value))
				{
					this.OnWeightPersonChanging(value);
					this.SendPropertyChanging();
					this._WeightPerson = value;
					this.SendPropertyChanged("WeightPerson");
					this.OnWeightPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightPerson", DbType="Float")]
		public System.Nullable<double> HeightPerson
		{
			get
			{
				return this._HeightPerson;
			}
			set
			{
				if ((this._HeightPerson != value))
				{
					this.OnHeightPersonChanging(value);
					this.SendPropertyChanging();
					this._HeightPerson = value;
					this.SendPropertyChanged("HeightPerson");
					this.OnHeightPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubWelfareID", DbType="VarChar(10)")]
		public string SubWelfareID
		{
			get
			{
				return this._SubWelfareID;
			}
			set
			{
				if ((this._SubWelfareID != value))
				{
					this.OnSubWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._SubWelfareID = value;
					this.SendPropertyChanged("SubWelfareID");
					this.OnSubWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foreigner", DbType="VarChar(10)")]
		public string Foreigner
		{
			get
			{
				return this._Foreigner;
			}
			set
			{
				if ((this._Foreigner != value))
				{
					this.OnForeignerChanging(value);
					this.SendPropertyChanging();
					this._Foreigner = value;
					this.SendPropertyChanged("Foreigner");
					this.OnForeignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveHomeStatus", DbType="VarChar(2)")]
		public string LiveHomeStatus
		{
			get
			{
				return this._LiveHomeStatus;
			}
			set
			{
				if ((this._LiveHomeStatus != value))
				{
					this.OnLiveHomeStatusChanging(value);
					this.SendPropertyChanging();
					this._LiveHomeStatus = value;
					this.SendPropertyChanged("LiveHomeStatus");
					this.OnLiveHomeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveHouseNumber", DbType="VarChar(MAX)")]
		public string LiveHouseNumber
		{
			get
			{
				return this._LiveHouseNumber;
			}
			set
			{
				if ((this._LiveHouseNumber != value))
				{
					this.OnLiveHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._LiveHouseNumber = value;
					this.SendPropertyChanged("LiveHouseNumber");
					this.OnLiveHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMooNumber", DbType="VarChar(MAX)")]
		public string LiveMooNumber
		{
			get
			{
				return this._LiveMooNumber;
			}
			set
			{
				if ((this._LiveMooNumber != value))
				{
					this.OnLiveMooNumberChanging(value);
					this.SendPropertyChanging();
					this._LiveMooNumber = value;
					this.SendPropertyChanged("LiveMooNumber");
					this.OnLiveMooNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveVillageName", DbType="VarChar(MAX)")]
		public string LiveVillageName
		{
			get
			{
				return this._LiveVillageName;
			}
			set
			{
				if ((this._LiveVillageName != value))
				{
					this.OnLiveVillageNameChanging(value);
					this.SendPropertyChanging();
					this._LiveVillageName = value;
					this.SendPropertyChanged("LiveVillageName");
					this.OnLiveVillageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveAlley", DbType="VarChar(MAX)")]
		public string LiveAlley
		{
			get
			{
				return this._LiveAlley;
			}
			set
			{
				if ((this._LiveAlley != value))
				{
					this.OnLiveAlleyChanging(value);
					this.SendPropertyChanging();
					this._LiveAlley = value;
					this.SendPropertyChanged("LiveAlley");
					this.OnLiveAlleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveStreetName", DbType="VarChar(MAX)")]
		public string LiveStreetName
		{
			get
			{
				return this._LiveStreetName;
			}
			set
			{
				if ((this._LiveStreetName != value))
				{
					this.OnLiveStreetNameChanging(value);
					this.SendPropertyChanging();
					this._LiveStreetName = value;
					this.SendPropertyChanged("LiveStreetName");
					this.OnLiveStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveTumbon", DbType="VarChar(10)")]
		public string LiveTumbon
		{
			get
			{
				return this._LiveTumbon;
			}
			set
			{
				if ((this._LiveTumbon != value))
				{
					this.OnLiveTumbonChanging(value);
					this.SendPropertyChanging();
					this._LiveTumbon = value;
					this.SendPropertyChanged("LiveTumbon");
					this.OnLiveTumbonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveCity", DbType="VarChar(10)")]
		public string LiveCity
		{
			get
			{
				return this._LiveCity;
			}
			set
			{
				if ((this._LiveCity != value))
				{
					this.OnLiveCityChanging(value);
					this.SendPropertyChanging();
					this._LiveCity = value;
					this.SendPropertyChanged("LiveCity");
					this.OnLiveCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveProvince", DbType="VarChar(10)")]
		public string LiveProvince
		{
			get
			{
				return this._LiveProvince;
			}
			set
			{
				if ((this._LiveProvince != value))
				{
					this.OnLiveProvinceChanging(value);
					this.SendPropertyChanging();
					this._LiveProvince = value;
					this.SendPropertyChanged("LiveProvince");
					this.OnLiveProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivePostCode", DbType="VarChar(5)")]
		public string LivePostCode
		{
			get
			{
				return this._LivePostCode;
			}
			set
			{
				if ((this._LivePostCode != value))
				{
					this.OnLivePostCodeChanging(value);
					this.SendPropertyChanging();
					this._LivePostCode = value;
					this.SendPropertyChanged("LivePostCode");
					this.OnLivePostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LiveMoveInDate
		{
			get
			{
				return this._LiveMoveInDate;
			}
			set
			{
				if ((this._LiveMoveInDate != value))
				{
					this.OnLiveMoveInDateChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveInDate = value;
					this.SendPropertyChanged("LiveMoveInDate");
					this.OnLiveMoveInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LiveMoveOutDate
		{
			get
			{
				return this._LiveMoveOutDate;
			}
			set
			{
				if ((this._LiveMoveOutDate != value))
				{
					this.OnLiveMoveOutDateChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveOutDate = value;
					this.SendPropertyChanged("LiveMoveOutDate");
					this.OnLiveMoveOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMoveOutReason", DbType="VarChar(MAX)")]
		public string LiveMoveOutReason
		{
			get
			{
				return this._LiveMoveOutReason;
			}
			set
			{
				if ((this._LiveMoveOutReason != value))
				{
					this.OnLiveMoveOutReasonChanging(value);
					this.SendPropertyChanging();
					this._LiveMoveOutReason = value;
					this.SendPropertyChanged("LiveMoveOutReason");
					this.OnLiveMoveOutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusHouseNumber", DbType="VarChar(MAX)")]
		public string CensusHouseNumber
		{
			get
			{
				return this._CensusHouseNumber;
			}
			set
			{
				if ((this._CensusHouseNumber != value))
				{
					this.OnCensusHouseNumberChanging(value);
					this.SendPropertyChanging();
					this._CensusHouseNumber = value;
					this.SendPropertyChanged("CensusHouseNumber");
					this.OnCensusHouseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMooNumber", DbType="VarChar(MAX)")]
		public string CensusMooNumber
		{
			get
			{
				return this._CensusMooNumber;
			}
			set
			{
				if ((this._CensusMooNumber != value))
				{
					this.OnCensusMooNumberChanging(value);
					this.SendPropertyChanging();
					this._CensusMooNumber = value;
					this.SendPropertyChanged("CensusMooNumber");
					this.OnCensusMooNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusVillageName", DbType="VarChar(MAX)")]
		public string CensusVillageName
		{
			get
			{
				return this._CensusVillageName;
			}
			set
			{
				if ((this._CensusVillageName != value))
				{
					this.OnCensusVillageNameChanging(value);
					this.SendPropertyChanging();
					this._CensusVillageName = value;
					this.SendPropertyChanged("CensusVillageName");
					this.OnCensusVillageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusAlley", DbType="VarChar(MAX)")]
		public string CensusAlley
		{
			get
			{
				return this._CensusAlley;
			}
			set
			{
				if ((this._CensusAlley != value))
				{
					this.OnCensusAlleyChanging(value);
					this.SendPropertyChanging();
					this._CensusAlley = value;
					this.SendPropertyChanged("CensusAlley");
					this.OnCensusAlleyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusStreetName", DbType="VarChar(MAX)")]
		public string CensusStreetName
		{
			get
			{
				return this._CensusStreetName;
			}
			set
			{
				if ((this._CensusStreetName != value))
				{
					this.OnCensusStreetNameChanging(value);
					this.SendPropertyChanging();
					this._CensusStreetName = value;
					this.SendPropertyChanged("CensusStreetName");
					this.OnCensusStreetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusTumbon", DbType="VarChar(10)")]
		public string CensusTumbon
		{
			get
			{
				return this._CensusTumbon;
			}
			set
			{
				if ((this._CensusTumbon != value))
				{
					this.OnCensusTumbonChanging(value);
					this.SendPropertyChanging();
					this._CensusTumbon = value;
					this.SendPropertyChanged("CensusTumbon");
					this.OnCensusTumbonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusCity", DbType="VarChar(10)")]
		public string CensusCity
		{
			get
			{
				return this._CensusCity;
			}
			set
			{
				if ((this._CensusCity != value))
				{
					this.OnCensusCityChanging(value);
					this.SendPropertyChanging();
					this._CensusCity = value;
					this.SendPropertyChanged("CensusCity");
					this.OnCensusCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusProvince", DbType="VarChar(10)")]
		public string CensusProvince
		{
			get
			{
				return this._CensusProvince;
			}
			set
			{
				if ((this._CensusProvince != value))
				{
					this.OnCensusProvinceChanging(value);
					this.SendPropertyChanging();
					this._CensusProvince = value;
					this.SendPropertyChanged("CensusProvince");
					this.OnCensusProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusPostCode", DbType="VarChar(5)")]
		public string CensusPostCode
		{
			get
			{
				return this._CensusPostCode;
			}
			set
			{
				if ((this._CensusPostCode != value))
				{
					this.OnCensusPostCodeChanging(value);
					this.SendPropertyChanging();
					this._CensusPostCode = value;
					this.SendPropertyChanged("CensusPostCode");
					this.OnCensusPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveInDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CensusMoveInDate
		{
			get
			{
				return this._CensusMoveInDate;
			}
			set
			{
				if ((this._CensusMoveInDate != value))
				{
					this.OnCensusMoveInDateChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveInDate = value;
					this.SendPropertyChanged("CensusMoveInDate");
					this.OnCensusMoveInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveOutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CensusMoveOutDate
		{
			get
			{
				return this._CensusMoveOutDate;
			}
			set
			{
				if ((this._CensusMoveOutDate != value))
				{
					this.OnCensusMoveOutDateChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveOutDate = value;
					this.SendPropertyChanged("CensusMoveOutDate");
					this.OnCensusMoveOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CensusMoveOutReason", DbType="VarChar(MAX)")]
		public string CensusMoveOutReason
		{
			get
			{
				return this._CensusMoveOutReason;
			}
			set
			{
				if ((this._CensusMoveOutReason != value))
				{
					this.OnCensusMoveOutReasonChanging(value);
					this.SendPropertyChanging();
					this._CensusMoveOutReason = value;
					this.SendPropertyChanged("CensusMoveOutReason");
					this.OnCensusMoveOutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(15)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(15)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordStaffID", DbType="VarChar(10)")]
		public string RecordStaffID
		{
			get
			{
				return this._RecordStaffID;
			}
			set
			{
				if ((this._RecordStaffID != value))
				{
					this.OnRecordStaffIDChanging(value);
					this.SendPropertyChanging();
					this._RecordStaffID = value;
					this.SendPropertyChanged("RecordStaffID");
					this.OnRecordStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Family", Storage="_Families", ThisKey="CID", OtherKey="CID")]
		public EntitySet<Family> Families
		{
			get
			{
				return this._Families;
			}
			set
			{
				this._Families.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TravelGotoHostpital", Storage="_TravelGotoHostpital", ThisKey="CID", OtherKey="CID", IsUnique=true, IsForeignKey=false)]
		public TravelGotoHostpital TravelGotoHostpital
		{
			get
			{
				return this._TravelGotoHostpital.Entity;
			}
			set
			{
				TravelGotoHostpital previousValue = this._TravelGotoHostpital.Entity;
				if (((previousValue != value) 
							|| (this._TravelGotoHostpital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TravelGotoHostpital.Entity = null;
						previousValue.Person = null;
					}
					this._TravelGotoHostpital.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("TravelGotoHostpital");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Families(Family entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersoninfoTemp")]
	public partial class PersoninfoTemp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _Title;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Gender;
		
		private string _Bloodtype;
		
		private string _Nation;
		
		private string _Race;
		
		private string _Religion;
		
		private System.Nullable<double> _WeightPerson;
		
		private System.Nullable<double> _HeightPerson;
		
		private string _SubWelfareID;
		
		private string _Foreigner;
		
		private System.Nullable<float> _WeightPersonh;
		
		private System.Nullable<float> _Height;
		
		private string _HealthService;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnBloodtypeChanging(string value);
    partial void OnBloodtypeChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnWeightPersonChanging(System.Nullable<double> value);
    partial void OnWeightPersonChanged();
    partial void OnHeightPersonChanging(System.Nullable<double> value);
    partial void OnHeightPersonChanged();
    partial void OnSubWelfareIDChanging(string value);
    partial void OnSubWelfareIDChanged();
    partial void OnForeignerChanging(string value);
    partial void OnForeignerChanged();
    partial void OnWeightPersonhChanging(System.Nullable<float> value);
    partial void OnWeightPersonhChanged();
    partial void OnHeightChanging(System.Nullable<float> value);
    partial void OnHeightChanged();
    partial void OnHealthServiceChanging(string value);
    partial void OnHealthServiceChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public PersoninfoTemp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(2)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(2)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bloodtype", DbType="VarChar(2)")]
		public string Bloodtype
		{
			get
			{
				return this._Bloodtype;
			}
			set
			{
				if ((this._Bloodtype != value))
				{
					this.OnBloodtypeChanging(value);
					this.SendPropertyChanging();
					this._Bloodtype = value;
					this.SendPropertyChanged("Bloodtype");
					this.OnBloodtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="VarChar(MAX)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="VarChar(MAX)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(MAX)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightPerson", DbType="Float")]
		public System.Nullable<double> WeightPerson
		{
			get
			{
				return this._WeightPerson;
			}
			set
			{
				if ((this._WeightPerson != value))
				{
					this.OnWeightPersonChanging(value);
					this.SendPropertyChanging();
					this._WeightPerson = value;
					this.SendPropertyChanged("WeightPerson");
					this.OnWeightPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeightPerson", DbType="Float")]
		public System.Nullable<double> HeightPerson
		{
			get
			{
				return this._HeightPerson;
			}
			set
			{
				if ((this._HeightPerson != value))
				{
					this.OnHeightPersonChanging(value);
					this.SendPropertyChanging();
					this._HeightPerson = value;
					this.SendPropertyChanged("HeightPerson");
					this.OnHeightPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubWelfareID", DbType="VarChar(10)")]
		public string SubWelfareID
		{
			get
			{
				return this._SubWelfareID;
			}
			set
			{
				if ((this._SubWelfareID != value))
				{
					this.OnSubWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._SubWelfareID = value;
					this.SendPropertyChanged("SubWelfareID");
					this.OnSubWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foreigner", DbType="VarChar(10)")]
		public string Foreigner
		{
			get
			{
				return this._Foreigner;
			}
			set
			{
				if ((this._Foreigner != value))
				{
					this.OnForeignerChanging(value);
					this.SendPropertyChanging();
					this._Foreigner = value;
					this.SendPropertyChanged("Foreigner");
					this.OnForeignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightPersonh", DbType="Real")]
		public System.Nullable<float> WeightPersonh
		{
			get
			{
				return this._WeightPersonh;
			}
			set
			{
				if ((this._WeightPersonh != value))
				{
					this.OnWeightPersonhChanging(value);
					this.SendPropertyChanging();
					this._WeightPersonh = value;
					this.SendPropertyChanged("WeightPersonh");
					this.OnWeightPersonhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Real")]
		public System.Nullable<float> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthService", DbType="VarChar(1)")]
		public string HealthService
		{
			get
			{
				return this._HealthService;
			}
			set
			{
				if ((this._HealthService != value))
				{
					this.OnHealthServiceChanging(value);
					this.SendPropertyChanging();
					this._HealthService = value;
					this.SendPropertyChanged("HealthService");
					this.OnHealthServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanCaseService")]
	public partial class PlanCaseService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private string _CaseNo;
		
		private string _StaffID;
		
		private string _CoStaff1ID;
		
		private string _CoStaff2ID;
		
		private string _CoStaff3ID;
		
		private string _CoStaff4ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnCaseNoChanging(string value);
    partial void OnCaseNoChanged();
    partial void OnStaffIDChanging(string value);
    partial void OnStaffIDChanged();
    partial void OnCoStaff1IDChanging(string value);
    partial void OnCoStaff1IDChanged();
    partial void OnCoStaff2IDChanging(string value);
    partial void OnCoStaff2IDChanged();
    partial void OnCoStaff3IDChanging(string value);
    partial void OnCoStaff3IDChanged();
    partial void OnCoStaff4IDChanging(string value);
    partial void OnCoStaff4IDChanged();
    #endregion
		
		public PlanCaseService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNo", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CaseNo
		{
			get
			{
				return this._CaseNo;
			}
			set
			{
				if ((this._CaseNo != value))
				{
					this.OnCaseNoChanging(value);
					this.SendPropertyChanging();
					this._CaseNo = value;
					this.SendPropertyChanged("CaseNo");
					this.OnCaseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Char(255)")]
		public string StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoStaff1ID", DbType="Char(255)")]
		public string CoStaff1ID
		{
			get
			{
				return this._CoStaff1ID;
			}
			set
			{
				if ((this._CoStaff1ID != value))
				{
					this.OnCoStaff1IDChanging(value);
					this.SendPropertyChanging();
					this._CoStaff1ID = value;
					this.SendPropertyChanged("CoStaff1ID");
					this.OnCoStaff1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoStaff2ID", DbType="Char(255)")]
		public string CoStaff2ID
		{
			get
			{
				return this._CoStaff2ID;
			}
			set
			{
				if ((this._CoStaff2ID != value))
				{
					this.OnCoStaff2IDChanging(value);
					this.SendPropertyChanging();
					this._CoStaff2ID = value;
					this.SendPropertyChanged("CoStaff2ID");
					this.OnCoStaff2IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoStaff3ID", DbType="Char(255)")]
		public string CoStaff3ID
		{
			get
			{
				return this._CoStaff3ID;
			}
			set
			{
				if ((this._CoStaff3ID != value))
				{
					this.OnCoStaff3IDChanging(value);
					this.SendPropertyChanging();
					this._CoStaff3ID = value;
					this.SendPropertyChanged("CoStaff3ID");
					this.OnCoStaff3IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoStaff4ID", DbType="Char(255)")]
		public string CoStaff4ID
		{
			get
			{
				return this._CoStaff4ID;
			}
			set
			{
				if ((this._CoStaff4ID != value))
				{
					this.OnCoStaff4IDChanging(value);
					this.SendPropertyChanging();
					this._CoStaff4ID = value;
					this.SendPropertyChanged("CoStaff4ID");
					this.OnCoStaff4IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanService")]
	public partial class PlanService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rowNumber;
		
		private string _CID;
		
		private string _CaseNo;
		
		private string _SVCCode;
		
		private string _ResponsibleAgency;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrowNumberChanging(int value);
    partial void OnrowNumberChanged();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnCaseNoChanging(string value);
    partial void OnCaseNoChanged();
    partial void OnSVCCodeChanging(string value);
    partial void OnSVCCodeChanged();
    partial void OnResponsibleAgencyChanging(string value);
    partial void OnResponsibleAgencyChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public PlanService()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rowNumber
		{
			get
			{
				return this._rowNumber;
			}
			set
			{
				if ((this._rowNumber != value))
				{
					this.OnrowNumberChanging(value);
					this.SendPropertyChanging();
					this._rowNumber = value;
					this.SendPropertyChanged("rowNumber");
					this.OnrowNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13)")]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNo", DbType="Char(10)")]
		public string CaseNo
		{
			get
			{
				return this._CaseNo;
			}
			set
			{
				if ((this._CaseNo != value))
				{
					this.OnCaseNoChanging(value);
					this.SendPropertyChanging();
					this._CaseNo = value;
					this.SendPropertyChanged("CaseNo");
					this.OnCaseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCCode", DbType="Char(255)")]
		public string SVCCode
		{
			get
			{
				return this._SVCCode;
			}
			set
			{
				if ((this._SVCCode != value))
				{
					this.OnSVCCodeChanging(value);
					this.SendPropertyChanging();
					this._SVCCode = value;
					this.SendPropertyChanged("SVCCode");
					this.OnSVCCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleAgency", DbType="VarChar(15)")]
		public string ResponsibleAgency
		{
			get
			{
				return this._ResponsibleAgency;
			}
			set
			{
				if ((this._ResponsibleAgency != value))
				{
					this.OnResponsibleAgencyChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleAgency = value;
					this.SendPropertyChanged("ResponsibleAgency");
					this.OnResponsibleAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provider")]
	public partial class Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProviderCode;
		
		private string _ProviderName;
		
		private string _OrgCode;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviderCodeChanging(string value);
    partial void OnProviderCodeChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    #endregion
		
		public Provider()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderCode
		{
			get
			{
				return this._ProviderCode;
			}
			set
			{
				if ((this._ProviderCode != value))
				{
					this.OnProviderCodeChanging(value);
					this.SendPropertyChanging();
					this._ProviderCode = value;
					this.SendPropertyChanged("ProviderCode");
					this.OnProviderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="Char(255)")]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="Char(255)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_Provider", Storage="_Organization", ThisKey="OrgCode", OtherKey="OrgCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.Providers.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.Providers.Add(this);
						this._OrgCode = value.OrgCode;
					}
					else
					{
						this._OrgCode = default(string);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Province")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProvinceID;
		
		private string _ProvinceDescription;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvinceIDChanging(string value);
    partial void OnProvinceIDChanged();
    partial void OnProvinceDescriptionChanging(string value);
    partial void OnProvinceDescriptionChanged();
    #endregion
		
		public Province()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceDescription", DbType="VarChar(MAX)")]
		public string ProvinceDescription
		{
			get
			{
				return this._ProvinceDescription;
			}
			set
			{
				if ((this._ProvinceDescription != value))
				{
					this.OnProvinceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProvinceDescription = value;
					this.SendPropertyChanged("ProvinceDescription");
					this.OnProvinceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Cities", ThisKey="ProvinceID", OtherKey="ProvinceID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quastionare")]
	public partial class Quastionare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QNCode;
		
		private string _QNName;
		
		private System.Nullable<char> _SetType1;
		
		private System.Nullable<char> _SetType2;
		
		private System.Nullable<char> _SetType3;
		
		private System.Nullable<char> _SetType4;
		
		private System.Nullable<int> _PartforEvaluation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQNCodeChanging(string value);
    partial void OnQNCodeChanged();
    partial void OnQNNameChanging(string value);
    partial void OnQNNameChanged();
    partial void OnSetType1Changing(System.Nullable<char> value);
    partial void OnSetType1Changed();
    partial void OnSetType2Changing(System.Nullable<char> value);
    partial void OnSetType2Changed();
    partial void OnSetType3Changing(System.Nullable<char> value);
    partial void OnSetType3Changed();
    partial void OnSetType4Changing(System.Nullable<char> value);
    partial void OnSetType4Changed();
    partial void OnPartforEvaluationChanging(System.Nullable<int> value);
    partial void OnPartforEvaluationChanged();
    #endregion
		
		public Quastionare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QNCode", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QNCode
		{
			get
			{
				return this._QNCode;
			}
			set
			{
				if ((this._QNCode != value))
				{
					this.OnQNCodeChanging(value);
					this.SendPropertyChanging();
					this._QNCode = value;
					this.SendPropertyChanged("QNCode");
					this.OnQNCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QNName", DbType="Char(255)")]
		public string QNName
		{
			get
			{
				return this._QNName;
			}
			set
			{
				if ((this._QNName != value))
				{
					this.OnQNNameChanging(value);
					this.SendPropertyChanging();
					this._QNName = value;
					this.SendPropertyChanged("QNName");
					this.OnQNNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetType1", DbType="Char(1)")]
		public System.Nullable<char> SetType1
		{
			get
			{
				return this._SetType1;
			}
			set
			{
				if ((this._SetType1 != value))
				{
					this.OnSetType1Changing(value);
					this.SendPropertyChanging();
					this._SetType1 = value;
					this.SendPropertyChanged("SetType1");
					this.OnSetType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetType2", DbType="Char(1)")]
		public System.Nullable<char> SetType2
		{
			get
			{
				return this._SetType2;
			}
			set
			{
				if ((this._SetType2 != value))
				{
					this.OnSetType2Changing(value);
					this.SendPropertyChanging();
					this._SetType2 = value;
					this.SendPropertyChanged("SetType2");
					this.OnSetType2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetType3", DbType="Char(1)")]
		public System.Nullable<char> SetType3
		{
			get
			{
				return this._SetType3;
			}
			set
			{
				if ((this._SetType3 != value))
				{
					this.OnSetType3Changing(value);
					this.SendPropertyChanging();
					this._SetType3 = value;
					this.SendPropertyChanged("SetType3");
					this.OnSetType3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetType4", DbType="Char(1)")]
		public System.Nullable<char> SetType4
		{
			get
			{
				return this._SetType4;
			}
			set
			{
				if ((this._SetType4 != value))
				{
					this.OnSetType4Changing(value);
					this.SendPropertyChanging();
					this._SetType4 = value;
					this.SendPropertyChanged("SetType4");
					this.OnSetType4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartforEvaluation", DbType="Int")]
		public System.Nullable<int> PartforEvaluation
		{
			get
			{
				return this._PartforEvaluation;
			}
			set
			{
				if ((this._PartforEvaluation != value))
				{
					this.OnPartforEvaluationChanging(value);
					this.SendPropertyChanging();
					this._PartforEvaluation = value;
					this.SendPropertyChanged("PartforEvaluation");
					this.OnPartforEvaluationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReasonMoveType")]
	public partial class ReasonMoveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReasonMoveID;
		
		private string _ReasonMoveDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonMoveIDChanging(string value);
    partial void OnReasonMoveIDChanged();
    partial void OnReasonMoveDescriptionChanging(string value);
    partial void OnReasonMoveDescriptionChanged();
    #endregion
		
		public ReasonMoveType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonMoveID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReasonMoveID
		{
			get
			{
				return this._ReasonMoveID;
			}
			set
			{
				if ((this._ReasonMoveID != value))
				{
					this.OnReasonMoveIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonMoveID = value;
					this.SendPropertyChanged("ReasonMoveID");
					this.OnReasonMoveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonMoveDescription", DbType="VarChar(MAX)")]
		public string ReasonMoveDescription
		{
			get
			{
				return this._ReasonMoveDescription;
			}
			set
			{
				if ((this._ReasonMoveDescription != value))
				{
					this.OnReasonMoveDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ReasonMoveDescription = value;
					this.SendPropertyChanged("ReasonMoveDescription");
					this.OnReasonMoveDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation")]
	public partial class Relation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RelationID;
		
		private string _RelationThaiDescription;
		
		private string _RelationHL7Code;
		
		private string _RelationEngName;
		
		private string _RelationEngLongDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationIDChanging(string value);
    partial void OnRelationIDChanged();
    partial void OnRelationThaiDescriptionChanging(string value);
    partial void OnRelationThaiDescriptionChanged();
    partial void OnRelationHL7CodeChanging(string value);
    partial void OnRelationHL7CodeChanged();
    partial void OnRelationEngNameChanging(string value);
    partial void OnRelationEngNameChanged();
    partial void OnRelationEngLongDescriptionChanging(string value);
    partial void OnRelationEngLongDescriptionChanged();
    #endregion
		
		public Relation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RelationID
		{
			get
			{
				return this._RelationID;
			}
			set
			{
				if ((this._RelationID != value))
				{
					this.OnRelationIDChanging(value);
					this.SendPropertyChanging();
					this._RelationID = value;
					this.SendPropertyChanged("RelationID");
					this.OnRelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationThaiDescription", DbType="VarChar(MAX)")]
		public string RelationThaiDescription
		{
			get
			{
				return this._RelationThaiDescription;
			}
			set
			{
				if ((this._RelationThaiDescription != value))
				{
					this.OnRelationThaiDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RelationThaiDescription = value;
					this.SendPropertyChanged("RelationThaiDescription");
					this.OnRelationThaiDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationHL7Code", DbType="VarChar(10)")]
		public string RelationHL7Code
		{
			get
			{
				return this._RelationHL7Code;
			}
			set
			{
				if ((this._RelationHL7Code != value))
				{
					this.OnRelationHL7CodeChanging(value);
					this.SendPropertyChanging();
					this._RelationHL7Code = value;
					this.SendPropertyChanged("RelationHL7Code");
					this.OnRelationHL7CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationEngName", DbType="VarChar(MAX)")]
		public string RelationEngName
		{
			get
			{
				return this._RelationEngName;
			}
			set
			{
				if ((this._RelationEngName != value))
				{
					this.OnRelationEngNameChanging(value);
					this.SendPropertyChanging();
					this._RelationEngName = value;
					this.SendPropertyChanged("RelationEngName");
					this.OnRelationEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationEngLongDescription", DbType="VarChar(MAX)")]
		public string RelationEngLongDescription
		{
			get
			{
				return this._RelationEngLongDescription;
			}
			set
			{
				if ((this._RelationEngLongDescription != value))
				{
					this.OnRelationEngLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RelationEngLongDescription = value;
					this.SendPropertyChanged("RelationEngLongDescription");
					this.OnRelationEngLongDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultForEvaluation")]
	public partial class ResultForEvaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ResulEvaluationID;
		
		private string _ResulEvaluationDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResulEvaluationIDChanging(string value);
    partial void OnResulEvaluationIDChanged();
    partial void OnResulEvaluationDescriptionChanging(string value);
    partial void OnResulEvaluationDescriptionChanged();
    #endregion
		
		public ResultForEvaluation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResulEvaluationID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ResulEvaluationID
		{
			get
			{
				return this._ResulEvaluationID;
			}
			set
			{
				if ((this._ResulEvaluationID != value))
				{
					this.OnResulEvaluationIDChanging(value);
					this.SendPropertyChanging();
					this._ResulEvaluationID = value;
					this.SendPropertyChanged("ResulEvaluationID");
					this.OnResulEvaluationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResulEvaluationDescription", DbType="VarChar(MAX)")]
		public string ResulEvaluationDescription
		{
			get
			{
				return this._ResulEvaluationDescription;
			}
			set
			{
				if ((this._ResulEvaluationDescription != value))
				{
					this.OnResulEvaluationDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ResulEvaluationDescription = value;
					this.SendPropertyChanged("ResulEvaluationDescription");
					this.OnResulEvaluationDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultQuastionare")]
	public partial class ResultQuastionare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rowNumber;
		
		private string _CID;
		
		private System.Nullable<int> _CaseNumber;
		
		private string _TypeofPart;
		
		private string _ICFCode;
		
		private System.Nullable<int> _PointofEvaluation;
		
		private string _EvaluationType;
		
		private System.Nullable<System.DateTime> _DateTimeUpDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrowNumberChanging(int value);
    partial void OnrowNumberChanged();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnCaseNumberChanging(System.Nullable<int> value);
    partial void OnCaseNumberChanged();
    partial void OnTypeofPartChanging(string value);
    partial void OnTypeofPartChanged();
    partial void OnICFCodeChanging(string value);
    partial void OnICFCodeChanged();
    partial void OnPointofEvaluationChanging(System.Nullable<int> value);
    partial void OnPointofEvaluationChanged();
    partial void OnEvaluationTypeChanging(string value);
    partial void OnEvaluationTypeChanged();
    partial void OnDateTimeUpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpDateChanged();
    #endregion
		
		public ResultQuastionare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rowNumber
		{
			get
			{
				return this._rowNumber;
			}
			set
			{
				if ((this._rowNumber != value))
				{
					this.OnrowNumberChanging(value);
					this.SendPropertyChanging();
					this._rowNumber = value;
					this.SendPropertyChanged("rowNumber");
					this.OnrowNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13)")]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int")]
		public System.Nullable<int> CaseNumber
		{
			get
			{
				return this._CaseNumber;
			}
			set
			{
				if ((this._CaseNumber != value))
				{
					this.OnCaseNumberChanging(value);
					this.SendPropertyChanging();
					this._CaseNumber = value;
					this.SendPropertyChanged("CaseNumber");
					this.OnCaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeofPart", DbType="VarChar(2)")]
		public string TypeofPart
		{
			get
			{
				return this._TypeofPart;
			}
			set
			{
				if ((this._TypeofPart != value))
				{
					this.OnTypeofPartChanging(value);
					this.SendPropertyChanging();
					this._TypeofPart = value;
					this.SendPropertyChanged("TypeofPart");
					this.OnTypeofPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICFCode", DbType="VarChar(5)")]
		public string ICFCode
		{
			get
			{
				return this._ICFCode;
			}
			set
			{
				if ((this._ICFCode != value))
				{
					this.OnICFCodeChanging(value);
					this.SendPropertyChanging();
					this._ICFCode = value;
					this.SendPropertyChanged("ICFCode");
					this.OnICFCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointofEvaluation", DbType="Int")]
		public System.Nullable<int> PointofEvaluation
		{
			get
			{
				return this._PointofEvaluation;
			}
			set
			{
				if ((this._PointofEvaluation != value))
				{
					this.OnPointofEvaluationChanging(value);
					this.SendPropertyChanging();
					this._PointofEvaluation = value;
					this.SendPropertyChanged("PointofEvaluation");
					this.OnPointofEvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationType", DbType="VarChar(2)")]
		public string EvaluationType
		{
			get
			{
				return this._EvaluationType;
			}
			set
			{
				if ((this._EvaluationType != value))
				{
					this.OnEvaluationTypeChanging(value);
					this.SendPropertyChanging();
					this._EvaluationType = value;
					this.SendPropertyChanged("EvaluationType");
					this.OnEvaluationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpDate
		{
			get
			{
				return this._DateTimeUpDate;
			}
			set
			{
				if ((this._DateTimeUpDate != value))
				{
					this.OnDateTimeUpDateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpDate = value;
					this.SendPropertyChanged("DateTimeUpDate");
					this.OnDateTimeUpDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolCoordinates")]
	public partial class SchoolCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SchoolCode;
		
		private string _SchoolName;
		
		private string _SchoolAddress;
		
		private string _Latitude;
		
		private string _Longitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolCodeChanging(string value);
    partial void OnSchoolCodeChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnSchoolAddressChanging(string value);
    partial void OnSchoolAddressChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public SchoolCoordinate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolCode", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SchoolCode
		{
			get
			{
				return this._SchoolCode;
			}
			set
			{
				if ((this._SchoolCode != value))
				{
					this.OnSchoolCodeChanging(value);
					this.SendPropertyChanging();
					this._SchoolCode = value;
					this.SendPropertyChanged("SchoolCode");
					this.OnSchoolCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(MAX)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAddress", DbType="VarChar(MAX)")]
		public string SchoolAddress
		{
			get
			{
				return this._SchoolAddress;
			}
			set
			{
				if ((this._SchoolAddress != value))
				{
					this.OnSchoolAddressChanging(value);
					this.SendPropertyChanging();
					this._SchoolAddress = value;
					this.SendPropertyChanged("SchoolAddress");
					this.OnSchoolAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(MAX)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(MAX)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SVCCode;
		
		private string _SVCName;
		
		private string _SVCDesc;
		
		private string _HostCode;
		
		private string _StaffRole;
		
		private string _SVCType;
		
		private string _SVCObjective;
		
		private string _SVCSupport;
		
		private string _SVCCoverage;
		
		private string _SVCStart;
		
		private string _SVCEnd;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<ConditionService> _ConditionServices;
		
		private EntitySet<Material> _Materials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSVCCodeChanging(string value);
    partial void OnSVCCodeChanged();
    partial void OnSVCNameChanging(string value);
    partial void OnSVCNameChanged();
    partial void OnSVCDescChanging(string value);
    partial void OnSVCDescChanged();
    partial void OnHostCodeChanging(string value);
    partial void OnHostCodeChanged();
    partial void OnStaffRoleChanging(string value);
    partial void OnStaffRoleChanged();
    partial void OnSVCTypeChanging(string value);
    partial void OnSVCTypeChanged();
    partial void OnSVCObjectiveChanging(string value);
    partial void OnSVCObjectiveChanged();
    partial void OnSVCSupportChanging(string value);
    partial void OnSVCSupportChanged();
    partial void OnSVCCoverageChanging(string value);
    partial void OnSVCCoverageChanged();
    partial void OnSVCStartChanging(string value);
    partial void OnSVCStartChanged();
    partial void OnSVCEndChanging(string value);
    partial void OnSVCEndChanged();
    #endregion
		
		public Service()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._ConditionServices = new EntitySet<ConditionService>(new Action<ConditionService>(this.attach_ConditionServices), new Action<ConditionService>(this.detach_ConditionServices));
			this._Materials = new EntitySet<Material>(new Action<Material>(this.attach_Materials), new Action<Material>(this.detach_Materials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SVCCode
		{
			get
			{
				return this._SVCCode;
			}
			set
			{
				if ((this._SVCCode != value))
				{
					this.OnSVCCodeChanging(value);
					this.SendPropertyChanging();
					this._SVCCode = value;
					this.SendPropertyChanged("SVCCode");
					this.OnSVCCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCName", DbType="Char(255)")]
		public string SVCName
		{
			get
			{
				return this._SVCName;
			}
			set
			{
				if ((this._SVCName != value))
				{
					this.OnSVCNameChanging(value);
					this.SendPropertyChanging();
					this._SVCName = value;
					this.SendPropertyChanged("SVCName");
					this.OnSVCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCDesc", DbType="Char(255)")]
		public string SVCDesc
		{
			get
			{
				return this._SVCDesc;
			}
			set
			{
				if ((this._SVCDesc != value))
				{
					this.OnSVCDescChanging(value);
					this.SendPropertyChanging();
					this._SVCDesc = value;
					this.SendPropertyChanged("SVCDesc");
					this.OnSVCDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostCode", DbType="Char(255)")]
		public string HostCode
		{
			get
			{
				return this._HostCode;
			}
			set
			{
				if ((this._HostCode != value))
				{
					this.OnHostCodeChanging(value);
					this.SendPropertyChanging();
					this._HostCode = value;
					this.SendPropertyChanged("HostCode");
					this.OnHostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffRole", DbType="Char(255)")]
		public string StaffRole
		{
			get
			{
				return this._StaffRole;
			}
			set
			{
				if ((this._StaffRole != value))
				{
					this.OnStaffRoleChanging(value);
					this.SendPropertyChanging();
					this._StaffRole = value;
					this.SendPropertyChanged("StaffRole");
					this.OnStaffRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCType", DbType="Char(255)")]
		public string SVCType
		{
			get
			{
				return this._SVCType;
			}
			set
			{
				if ((this._SVCType != value))
				{
					this.OnSVCTypeChanging(value);
					this.SendPropertyChanging();
					this._SVCType = value;
					this.SendPropertyChanged("SVCType");
					this.OnSVCTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCObjective", DbType="Char(255)")]
		public string SVCObjective
		{
			get
			{
				return this._SVCObjective;
			}
			set
			{
				if ((this._SVCObjective != value))
				{
					this.OnSVCObjectiveChanging(value);
					this.SendPropertyChanging();
					this._SVCObjective = value;
					this.SendPropertyChanged("SVCObjective");
					this.OnSVCObjectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCSupport", DbType="Char(255)")]
		public string SVCSupport
		{
			get
			{
				return this._SVCSupport;
			}
			set
			{
				if ((this._SVCSupport != value))
				{
					this.OnSVCSupportChanging(value);
					this.SendPropertyChanging();
					this._SVCSupport = value;
					this.SendPropertyChanged("SVCSupport");
					this.OnSVCSupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCCoverage", DbType="Char(255)")]
		public string SVCCoverage
		{
			get
			{
				return this._SVCCoverage;
			}
			set
			{
				if ((this._SVCCoverage != value))
				{
					this.OnSVCCoverageChanging(value);
					this.SendPropertyChanging();
					this._SVCCoverage = value;
					this.SendPropertyChanged("SVCCoverage");
					this.OnSVCCoverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCStart", DbType="Char(255)")]
		public string SVCStart
		{
			get
			{
				return this._SVCStart;
			}
			set
			{
				if ((this._SVCStart != value))
				{
					this.OnSVCStartChanging(value);
					this.SendPropertyChanging();
					this._SVCStart = value;
					this.SendPropertyChanged("SVCStart");
					this.OnSVCStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SVCEnd", DbType="Char(255)")]
		public string SVCEnd
		{
			get
			{
				return this._SVCEnd;
			}
			set
			{
				if ((this._SVCEnd != value))
				{
					this.OnSVCEndChanging(value);
					this.SendPropertyChanging();
					this._SVCEnd = value;
					this.SendPropertyChanged("SVCEnd");
					this.OnSVCEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Activity", Storage="_Activities", ThisKey="SVCCode", OtherKey="SVCCode")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_ConditionService", Storage="_ConditionServices", ThisKey="SVCCode", OtherKey="SVCCODE")]
		public EntitySet<ConditionService> ConditionServices
		{
			get
			{
				return this._ConditionServices;
			}
			set
			{
				this._ConditionServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Material", Storage="_Materials", ThisKey="SVCCode", OtherKey="SVCCode")]
		public EntitySet<Material> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_ConditionServices(ConditionService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_ConditionServices(ConditionService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SocialDevelopCoordinates")]
	public partial class SocialDevelopCoordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SocialDevelopCode;
		
		private string _SocialDevelopName;
		
		private string _Latitude;
		
		private string _Longitude;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSocialDevelopCodeChanging(string value);
    partial void OnSocialDevelopCodeChanged();
    partial void OnSocialDevelopNameChanging(string value);
    partial void OnSocialDevelopNameChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public SocialDevelopCoordinate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialDevelopCode", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SocialDevelopCode
		{
			get
			{
				return this._SocialDevelopCode;
			}
			set
			{
				if ((this._SocialDevelopCode != value))
				{
					this.OnSocialDevelopCodeChanging(value);
					this.SendPropertyChanging();
					this._SocialDevelopCode = value;
					this.SendPropertyChanged("SocialDevelopCode");
					this.OnSocialDevelopCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialDevelopName", DbType="VarChar(MAX)")]
		public string SocialDevelopName
		{
			get
			{
				return this._SocialDevelopName;
			}
			set
			{
				if ((this._SocialDevelopName != value))
				{
					this.OnSocialDevelopNameChanging(value);
					this.SendPropertyChanging();
					this._SocialDevelopName = value;
					this.SendPropertyChanged("SocialDevelopName");
					this.OnSocialDevelopNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(MAX)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(MAX)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubActivity")]
	public partial class SubActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SACTCode;
		
		private string _SACTDesc;
		
		private string _ACTCode;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSACTCodeChanging(string value);
    partial void OnSACTCodeChanged();
    partial void OnSACTDescChanging(string value);
    partial void OnSACTDescChanged();
    partial void OnACTCodeChanging(string value);
    partial void OnACTCodeChanged();
    #endregion
		
		public SubActivity()
		{
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SACTCode", DbType="Char(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SACTCode
		{
			get
			{
				return this._SACTCode;
			}
			set
			{
				if ((this._SACTCode != value))
				{
					this.OnSACTCodeChanging(value);
					this.SendPropertyChanging();
					this._SACTCode = value;
					this.SendPropertyChanged("SACTCode");
					this.OnSACTCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SACTDesc", DbType="Char(255)")]
		public string SACTDesc
		{
			get
			{
				return this._SACTDesc;
			}
			set
			{
				if ((this._SACTDesc != value))
				{
					this.OnSACTDescChanging(value);
					this.SendPropertyChanging();
					this._SACTDesc = value;
					this.SendPropertyChanged("SACTDesc");
					this.OnSACTDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTCode", DbType="Char(255)")]
		public string ACTCode
		{
			get
			{
				return this._ACTCode;
			}
			set
			{
				if ((this._ACTCode != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACTCodeChanging(value);
					this.SendPropertyChanging();
					this._ACTCode = value;
					this.SendPropertyChanged("ACTCode");
					this.OnACTCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_SubActivity", Storage="_Activity", ThisKey="ACTCode", OtherKey="ACTCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.SubActivities.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.SubActivities.Add(this);
						this._ACTCode = value.ACTCode;
					}
					else
					{
						this._ACTCode = default(string);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubWelfare")]
	public partial class SubWelfare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubWelfareID;
		
		private string _SubWelfareDescription;
		
		private string _WelfareID;
		
		private EntityRef<WelfareCategory> _WelfareCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubWelfareIDChanging(string value);
    partial void OnSubWelfareIDChanged();
    partial void OnSubWelfareDescriptionChanging(string value);
    partial void OnSubWelfareDescriptionChanged();
    partial void OnWelfareIDChanging(string value);
    partial void OnWelfareIDChanged();
    #endregion
		
		public SubWelfare()
		{
			this._WelfareCategory = default(EntityRef<WelfareCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubWelfareID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubWelfareID
		{
			get
			{
				return this._SubWelfareID;
			}
			set
			{
				if ((this._SubWelfareID != value))
				{
					this.OnSubWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._SubWelfareID = value;
					this.SendPropertyChanged("SubWelfareID");
					this.OnSubWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubWelfareDescription", DbType="VarChar(MAX)")]
		public string SubWelfareDescription
		{
			get
			{
				return this._SubWelfareDescription;
			}
			set
			{
				if ((this._SubWelfareDescription != value))
				{
					this.OnSubWelfareDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SubWelfareDescription = value;
					this.SendPropertyChanged("SubWelfareDescription");
					this.OnSubWelfareDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelfareID", DbType="VarChar(2)")]
		public string WelfareID
		{
			get
			{
				return this._WelfareID;
			}
			set
			{
				if ((this._WelfareID != value))
				{
					if (this._WelfareCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._WelfareID = value;
					this.SendPropertyChanged("WelfareID");
					this.OnWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WelfareCategory_SubWelfare", Storage="_WelfareCategory", ThisKey="WelfareID", OtherKey="WelfareID", IsForeignKey=true, DeleteRule="CASCADE")]
		public WelfareCategory WelfareCategory
		{
			get
			{
				return this._WelfareCategory.Entity;
			}
			set
			{
				WelfareCategory previousValue = this._WelfareCategory.Entity;
				if (((previousValue != value) 
							|| (this._WelfareCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WelfareCategory.Entity = null;
						previousValue.SubWelfares.Remove(this);
					}
					this._WelfareCategory.Entity = value;
					if ((value != null))
					{
						value.SubWelfares.Add(this);
						this._WelfareID = value.WelfareID;
					}
					else
					{
						this._WelfareID = default(string);
					}
					this.SendPropertyChanged("WelfareCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Title")]
	public partial class Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TitleID;
		
		private string _TitleDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTitleIDChanging(string value);
    partial void OnTitleIDChanged();
    partial void OnTitleDescriptionChanging(string value);
    partial void OnTitleDescriptionChanged();
    #endregion
		
		public Title()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleDescription", DbType="VarChar(MAX)")]
		public string TitleDescription
		{
			get
			{
				return this._TitleDescription;
			}
			set
			{
				if ((this._TitleDescription != value))
				{
					this.OnTitleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TitleDescription = value;
					this.SendPropertyChanged("TitleDescription");
					this.OnTitleDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transportation")]
	public partial class Transportation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TravelID;
		
		private string _TravelDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelIDChanging(string value);
    partial void OnTravelIDChanged();
    partial void OnTravelDescriptionChanging(string value);
    partial void OnTravelDescriptionChanged();
    #endregion
		
		public Transportation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TravelID
		{
			get
			{
				return this._TravelID;
			}
			set
			{
				if ((this._TravelID != value))
				{
					this.OnTravelIDChanging(value);
					this.SendPropertyChanging();
					this._TravelID = value;
					this.SendPropertyChanged("TravelID");
					this.OnTravelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelDescription", DbType="VarChar(MAX)")]
		public string TravelDescription
		{
			get
			{
				return this._TravelDescription;
			}
			set
			{
				if ((this._TravelDescription != value))
				{
					this.OnTravelDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TravelDescription = value;
					this.SendPropertyChanged("TravelDescription");
					this.OnTravelDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TravelGotoHostpital")]
	public partial class TravelGotoHostpital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private System.Nullable<float> _TraveltimeHospital;
		
		private System.Nullable<float> _DistanceToHospital;
		
		private string _Transportation;
		
		private System.Nullable<float> _CostToHospital;
		
		private System.Nullable<float> _WaitingTimeToHospital;
		
		private string _PublicTransport;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnTraveltimeHospitalChanging(System.Nullable<float> value);
    partial void OnTraveltimeHospitalChanged();
    partial void OnDistanceToHospitalChanging(System.Nullable<float> value);
    partial void OnDistanceToHospitalChanged();
    partial void OnTransportationChanging(string value);
    partial void OnTransportationChanged();
    partial void OnCostToHospitalChanging(System.Nullable<float> value);
    partial void OnCostToHospitalChanged();
    partial void OnWaitingTimeToHospitalChanging(System.Nullable<float> value);
    partial void OnWaitingTimeToHospitalChanged();
    partial void OnPublicTransportChanging(string value);
    partial void OnPublicTransportChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public TravelGotoHostpital()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraveltimeHospital", DbType="Real")]
		public System.Nullable<float> TraveltimeHospital
		{
			get
			{
				return this._TraveltimeHospital;
			}
			set
			{
				if ((this._TraveltimeHospital != value))
				{
					this.OnTraveltimeHospitalChanging(value);
					this.SendPropertyChanging();
					this._TraveltimeHospital = value;
					this.SendPropertyChanged("TraveltimeHospital");
					this.OnTraveltimeHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceToHospital", DbType="Real")]
		public System.Nullable<float> DistanceToHospital
		{
			get
			{
				return this._DistanceToHospital;
			}
			set
			{
				if ((this._DistanceToHospital != value))
				{
					this.OnDistanceToHospitalChanging(value);
					this.SendPropertyChanging();
					this._DistanceToHospital = value;
					this.SendPropertyChanged("DistanceToHospital");
					this.OnDistanceToHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transportation", DbType="VarChar(2)")]
		public string Transportation
		{
			get
			{
				return this._Transportation;
			}
			set
			{
				if ((this._Transportation != value))
				{
					this.OnTransportationChanging(value);
					this.SendPropertyChanging();
					this._Transportation = value;
					this.SendPropertyChanged("Transportation");
					this.OnTransportationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostToHospital", DbType="Real")]
		public System.Nullable<float> CostToHospital
		{
			get
			{
				return this._CostToHospital;
			}
			set
			{
				if ((this._CostToHospital != value))
				{
					this.OnCostToHospitalChanging(value);
					this.SendPropertyChanging();
					this._CostToHospital = value;
					this.SendPropertyChanged("CostToHospital");
					this.OnCostToHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingTimeToHospital", DbType="Real")]
		public System.Nullable<float> WaitingTimeToHospital
		{
			get
			{
				return this._WaitingTimeToHospital;
			}
			set
			{
				if ((this._WaitingTimeToHospital != value))
				{
					this.OnWaitingTimeToHospitalChanging(value);
					this.SendPropertyChanging();
					this._WaitingTimeToHospital = value;
					this.SendPropertyChanged("WaitingTimeToHospital");
					this.OnWaitingTimeToHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicTransport", DbType="VarChar(MAX)")]
		public string PublicTransport
		{
			get
			{
				return this._PublicTransport;
			}
			set
			{
				if ((this._PublicTransport != value))
				{
					this.OnPublicTransportChanging(value);
					this.SendPropertyChanging();
					this._PublicTransport = value;
					this.SendPropertyChanged("PublicTransport");
					this.OnPublicTransportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_TravelGotoHostpital", Storage="_Person", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.TravelGotoHostpital = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.TravelGotoHostpital = this;
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(string);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TravelGotoSchool")]
	public partial class TravelGotoSchool : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CID;
		
		private System.Nullable<float> _TraveltimeSchool;
		
		private System.Nullable<float> _DistanceToSchool;
		
		private string _Transportation;
		
		private System.Nullable<float> _CostToSchool;
		
		private System.Nullable<float> _WaitingTimeToSchool;
		
		private string _PublicTransport;
		
		private System.Nullable<System.DateTime> _DateTimeUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(string value);
    partial void OnCIDChanged();
    partial void OnTraveltimeSchoolChanging(System.Nullable<float> value);
    partial void OnTraveltimeSchoolChanged();
    partial void OnDistanceToSchoolChanging(System.Nullable<float> value);
    partial void OnDistanceToSchoolChanged();
    partial void OnTransportationChanging(string value);
    partial void OnTransportationChanged();
    partial void OnCostToSchoolChanging(System.Nullable<float> value);
    partial void OnCostToSchoolChanged();
    partial void OnWaitingTimeToSchoolChanging(System.Nullable<float> value);
    partial void OnWaitingTimeToSchoolChanged();
    partial void OnPublicTransportChanging(string value);
    partial void OnPublicTransportChanged();
    partial void OnDateTimeUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeUpdateChanged();
    #endregion
		
		public TravelGotoSchool()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraveltimeSchool", DbType="Real")]
		public System.Nullable<float> TraveltimeSchool
		{
			get
			{
				return this._TraveltimeSchool;
			}
			set
			{
				if ((this._TraveltimeSchool != value))
				{
					this.OnTraveltimeSchoolChanging(value);
					this.SendPropertyChanging();
					this._TraveltimeSchool = value;
					this.SendPropertyChanged("TraveltimeSchool");
					this.OnTraveltimeSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceToSchool", DbType="Real")]
		public System.Nullable<float> DistanceToSchool
		{
			get
			{
				return this._DistanceToSchool;
			}
			set
			{
				if ((this._DistanceToSchool != value))
				{
					this.OnDistanceToSchoolChanging(value);
					this.SendPropertyChanging();
					this._DistanceToSchool = value;
					this.SendPropertyChanged("DistanceToSchool");
					this.OnDistanceToSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transportation", DbType="VarChar(2)")]
		public string Transportation
		{
			get
			{
				return this._Transportation;
			}
			set
			{
				if ((this._Transportation != value))
				{
					this.OnTransportationChanging(value);
					this.SendPropertyChanging();
					this._Transportation = value;
					this.SendPropertyChanged("Transportation");
					this.OnTransportationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostToSchool", DbType="Real")]
		public System.Nullable<float> CostToSchool
		{
			get
			{
				return this._CostToSchool;
			}
			set
			{
				if ((this._CostToSchool != value))
				{
					this.OnCostToSchoolChanging(value);
					this.SendPropertyChanging();
					this._CostToSchool = value;
					this.SendPropertyChanged("CostToSchool");
					this.OnCostToSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingTimeToSchool", DbType="Real")]
		public System.Nullable<float> WaitingTimeToSchool
		{
			get
			{
				return this._WaitingTimeToSchool;
			}
			set
			{
				if ((this._WaitingTimeToSchool != value))
				{
					this.OnWaitingTimeToSchoolChanging(value);
					this.SendPropertyChanging();
					this._WaitingTimeToSchool = value;
					this.SendPropertyChanged("WaitingTimeToSchool");
					this.OnWaitingTimeToSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicTransport", DbType="VarChar(MAX)")]
		public string PublicTransport
		{
			get
			{
				return this._PublicTransport;
			}
			set
			{
				if ((this._PublicTransport != value))
				{
					this.OnPublicTransportChanging(value);
					this.SendPropertyChanging();
					this._PublicTransport = value;
					this.SendPropertyChanged("PublicTransport");
					this.OnPublicTransportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeUpdate
		{
			get
			{
				return this._DateTimeUpdate;
			}
			set
			{
				if ((this._DateTimeUpdate != value))
				{
					this.OnDateTimeUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateTimeUpdate = value;
					this.SendPropertyChanged("DateTimeUpdate");
					this.OnDateTimeUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tumbon")]
	public partial class Tumbon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TumbonID;
		
		private string _TumbonDescription;
		
		private string _CityID;
		
		private EntityRef<City> _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTumbonIDChanging(string value);
    partial void OnTumbonIDChanged();
    partial void OnTumbonDescriptionChanging(string value);
    partial void OnTumbonDescriptionChanged();
    partial void OnCityIDChanging(string value);
    partial void OnCityIDChanged();
    #endregion
		
		public Tumbon()
		{
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumbonID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TumbonID
		{
			get
			{
				return this._TumbonID;
			}
			set
			{
				if ((this._TumbonID != value))
				{
					this.OnTumbonIDChanging(value);
					this.SendPropertyChanging();
					this._TumbonID = value;
					this.SendPropertyChanged("TumbonID");
					this.OnTumbonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumbonDescription", DbType="VarChar(MAX)")]
		public string TumbonDescription
		{
			get
			{
				return this._TumbonDescription;
			}
			set
			{
				if ((this._TumbonDescription != value))
				{
					this.OnTumbonDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TumbonDescription = value;
					this.SendPropertyChanged("TumbonDescription");
					this.OnTumbonDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="VarChar(10)")]
		public string CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Tumbon", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true, DeleteRule="CASCADE")]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Tumbons.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Tumbons.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(string);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WelfareCategory")]
	public partial class WelfareCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WelfareID;
		
		private string _WelfareDescription;
		
		private EntitySet<SubWelfare> _SubWelfares;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWelfareIDChanging(string value);
    partial void OnWelfareIDChanged();
    partial void OnWelfareDescriptionChanging(string value);
    partial void OnWelfareDescriptionChanged();
    #endregion
		
		public WelfareCategory()
		{
			this._SubWelfares = new EntitySet<SubWelfare>(new Action<SubWelfare>(this.attach_SubWelfares), new Action<SubWelfare>(this.detach_SubWelfares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelfareID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WelfareID
		{
			get
			{
				return this._WelfareID;
			}
			set
			{
				if ((this._WelfareID != value))
				{
					this.OnWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._WelfareID = value;
					this.SendPropertyChanged("WelfareID");
					this.OnWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelfareDescription", DbType="VarChar(MAX)")]
		public string WelfareDescription
		{
			get
			{
				return this._WelfareDescription;
			}
			set
			{
				if ((this._WelfareDescription != value))
				{
					this.OnWelfareDescriptionChanging(value);
					this.SendPropertyChanging();
					this._WelfareDescription = value;
					this.SendPropertyChanged("WelfareDescription");
					this.OnWelfareDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WelfareCategory_SubWelfare", Storage="_SubWelfares", ThisKey="WelfareID", OtherKey="WelfareID")]
		public EntitySet<SubWelfare> SubWelfares
		{
			get
			{
				return this._SubWelfares;
			}
			set
			{
				this._SubWelfares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubWelfares(SubWelfare entity)
		{
			this.SendPropertyChanging();
			entity.WelfareCategory = this;
		}
		
		private void detach_SubWelfares(SubWelfare entity)
		{
			this.SendPropertyChanging();
			entity.WelfareCategory = null;
		}
	}
}
#pragma warning restore 1591
